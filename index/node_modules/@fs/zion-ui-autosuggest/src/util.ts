import { type Suggestion } from './Autosuggest'

/* @TODO: Add documentation for usage of these things in Storybook */

/**
 * Converts a string into unicode, stripping diacritics and converting to lowercase
 *
 * See https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript
 * and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize
 */
export function normalize(str: string): string {
  return str
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .toLowerCase()
}

/**
 * Checks to see if the input string is a substring of the text, then returns an array of [pre, match, post],
 * where `pre` is the text before the match, `match` is the text that matched, and `post` is the text after the match.
 */
export const compareText = (input: string, text: string): [string, string, string] => {
  const normalizedInput = normalize(input).replace(/[.*+?^${}()|[\]\\]/g, '\\$&') // Escape special chars
  const match = normalize(text).match(normalizedInput)
  if (!match) return [text, '', '']
  const { index = 0 } = match
  const len = input.length
  return [text.slice(0, index), text.slice(index, index + len), text.slice(index + len)]
}

/**
 * Tells you whether an input string is a substring of another.
 * Reasonably handles diacritics and capitalization (e.g. `a` matches `A` and `á`).
 */
export const isSubstring = (input: string, text: string): boolean => !!compareText(input, text)[1]

/** Checks if the input string is a substring of either the primary or secondary text of the suggestion. */
export const checkSuggestionText = (input: string, suggestion: Suggestion): boolean =>
  !input || isSubstring(input, suggestion.primaryText) || isSubstring(input, suggestion.secondaryText || '')

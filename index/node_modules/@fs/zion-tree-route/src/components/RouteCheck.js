import React, { lazy, useEffect } from 'react'
import { useLocation, Redirect, useParams } from '@fs/zion-router'
import { isValidPid, pidRegexStr } from '@fs/zion-pid'
import { addToHistory } from '@fs/zion-tree-recents'
import { getEffectiveUser, useIsHelping } from '@fs/zion-user'
import { getActiveRole } from '@fs/zion-admin-mode'
import useIsAuthorizedToViewTree from '../hooks/useIsAuthorizedToViewTree'
import LoadingSpinner from './LoadingSpinner'
import { TreeRouteProvider } from './TreeRouteProvider'

const ErrorPage = lazy(() => import('./ErrorPage'))

export default function RouteCheck({ component: Component, children, setReadOnlyMode, LoadingComponent, ...props }) {
  const { isAuthorized, isReadOnlyUser, error, loading } = useIsAuthorizedToViewTree()
  const LoadingEl = LoadingComponent || LoadingSpinner
  const isInHelperMode = useIsHelping()
  const { pathname, search } = useLocation()
  const { pid } = useParams()
  useEffect(() => {
    setReadOnlyMode?.(isReadOnlyUser)
  }, [isReadOnlyUser, setReadOnlyMode])

  /*
   Add to history only if there is one PID.
   URLs that have multiple PIDs (like merge) don't need to be added to history.
   Do not add to history if in admin mode (helper mode is now supported in the session without breaking other people's preferences)
   OR if viewing the me person (they are filtered out, anyway, so save a call).
   FUTURE: also skip if viewing the starting person.
  */
  useEffect(() => {
    let isCurrent = true
    if (isAuthorized && isValidPid(pid)) {
      getActiveRole()
        .then((role) => {
          const isInAdminMode = role.match(/Admin/i)
          if (!isInAdminMode && isCurrent) {
            return getEffectiveUser()
          }
          return undefined
        })
        .then(async (user) => {
          // Check against logged-in user
          if (user && isCurrent && user?.personId !== pid) {
            // NOTE: It feels weird to not be able to just ask the GroupsProvider to figure out what context we are in, and instead every single consumer of GroupsProvider needs to pass in an explicit treeId, which makes it so that in order to save ONE unnecessary starting person transaction to fs-user, we have to make TWO data calls to get the information we need to make the decision.

            // If we are in helper mode, just add people to a temporary local cache.
            if (isInHelperMode) {
              return addToHistory(pid, user.cisId, true)
            }
            return addToHistory(pid, user.cisId)
          }
          return undefined
        })

        .catch((err) => {
          console.error('Error while adding to recents history', err)
        })
    }
    return () => {
      isCurrent = false
    }
  }, [isAuthorized, pid, isInHelperMode])

  // Always uppercase PIDs so we don't have to worry about case when calling endpoints (TF treats PRSN-NMBR and prsn-nmbr as two distinct entities; routing does not).
  let finalPathname = pathname

  if (pathname) {
    pathname.match(new RegExp(pidRegexStr, 'gi'))?.forEach((pidStr) => {
      // replaceAll is not fully supported on older browser versions so we should use replace instead
      finalPathname = finalPathname.replace(new RegExp(pidStr, 'g'), pidStr.toUpperCase())
    })
    if (finalPathname !== pathname) {
      return <Redirect to={finalPathname + search} />
    }
  }

  if (loading) return <LoadingEl />

  if (isAuthorized) {
    return (
      <TreeRouteProvider isReadOnlyUser={isReadOnlyUser}>
        {Component ? <Component {...props} /> : <>{children}</>}
      </TreeRouteProvider>
    )
  }

  return <ErrorPage error={error} />
}

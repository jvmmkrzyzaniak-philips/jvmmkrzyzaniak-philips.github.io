import Cookies from 'js-cookie'
import zionDebug from '@fs/zion-debug'
import { appName } from '@fs/zion-config'
import { deserializeExperiments, serializeExperiments } from './util'

const debug = zionDebug('zion:experiments:cookie')

const ONE_YEAR_IN_MS = 365 * 24 * 60 * 60 * 1000
const SHARED_KEY = 'shared-ui'
const EXPERIMENTS_COOKIE_NAME = 'fs_experiments'
const APP_EXPERIMENTS_COOKIE_NAME = `fs_ex_${appName}`

export function getExperimentsFromCookie(expsTemplate, allExps) {
  const cookieString = Cookies.get(EXPERIMENTS_COOKIE_NAME) || ''
  const appCookieString = Cookies.get(APP_EXPERIMENTS_COOKIE_NAME) || ''
  const appExps = {}
  debug('Cookie data: ', cookieString)

  if (!(cookieString || appCookieString)) {
    return {}
  }

  if (!expsTemplate && typeof window !== 'undefined' && window.manifest) {
    expsTemplate = window.manifest.experiments
  }

  try {
    allExps = deserializeExperiments(cookieString, expsTemplate.apps, appName)
  } catch (e) {
    allExps = { apps: {} }
  }
  debug('deserialized cookie ', allExps)

  allExps.apps[appName] = allExps.apps[appName] || appExps || { features: {} }
  allExps.apps[SHARED_KEY] = allExps.apps[SHARED_KEY] || { features: {} }

  return allExps.apps
}

export function setExperimentsCookie(allExps) {
  const expireDateTime = new Date(new Date().getTime() + ONE_YEAR_IN_MS) // set expiration date for 1 year

  const serializedExperiments = serializeExperiments(allExps)
  Cookies.set(EXPERIMENTS_COOKIE_NAME, serializedExperiments, { path: '/', expires: expireDateTime, sameSite: 'lax' })
  debug('Cookie updated ', serializedExperiments)
}

export function clearExperimentsCookie() {
  Cookies.remove(EXPERIMENTS_COOKIE_NAME, '/')
  Cookies.remove(APP_EXPERIMENTS_COOKIE_NAME, '/')
  debug('Cookies cleared')
}

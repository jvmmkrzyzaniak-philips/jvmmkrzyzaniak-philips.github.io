import { sentryDSN, sentryDefaults as zionSentryDefaults } from '@fs/zion-config'

const treeSentryDefaults = {
  ignoreErrors: [
    /.*-extension:\/\/.*/, // Browser extensions (chrome-extension, moz-extension, etc.).
    /.*AbortError: The transaction was aborted*./, // We think this happens when you cancel loading a page.
    /.*AbortError: Version change transaction was aborted.*/, // Primarily Facebook browser on mobile.
    /.*Blocked a frame with origin.*/, // We don't use frames for any of our content.
    /.*Can't find variable.*/, // _satellite and SymBrowser_ModifyWindowOpenWithTarget are referenced by the Apple Mail client.
    /.*Connection is closing.*/, // Happens when page is hibernated.
    /.*Connection on cached page closed*/, // Happens when page is hibernated.
    /.*connection was closed.*/, // Happens when page is hibernated.
    /.*ChunkLoadError.*/, // Figure out HOW this happens, and fix it.
    /.*Database deleted.*/, // Known caching error state.
    /.*database is a higher version.*/, // Caching error state.
    /.*database using a lower version.*/, // Caching error state.
    /.*disk is full.*/, // Caching error state.
    /.*Error creating or migrating .* in database.*/, // IndexedDB error in Safari.
    /.*Error looking up record in object store.*/, // Mac-based database errors.
    /.*Error:.*Indexed Database server.*/, // Various IndexedDB errors.
    /.*Extension context invalidated.*/, // Chrome Extension error that is not caught by the one above.
    /.*Failed to execute 'replaceState' on 'History'*/, // Happens when users are utilizing google translate, instead of lang picker.
    /.*flatMap*/, // issue in older browsers https://stackoverflow.com/questions/55530690/javascript-flatmap-method-over-array-flatmap-is-not-a-function
    /.*Internal error retrieving bucket.*/, // Split.io intermittent error.
    /.*is not defined.*/, // utag/apstagLOADED happens when analytics is blocked.
    /.*Loading CSS chunk.*/, // This should be caught by the css denyUrls entry, but isn't.
    /.*Munchkin.*/, // Munchkin marketing tracker appears to have problems.
    /.*Network Error*/, // This is an expected error for when an Axios request cannot contact one of our servers.
    /.*No Session Id*/, // Expected error from zion-user.
    /.*no user signed in.*/, // Expected error from zion-preferences.
    /.*Non-Error promise rejection captured.*/, // Happens on app 301 redirects.
    /.*One of the specified object stores was not found.*/, // IndexedDB broken state error.
    /.*QuotaExceededError.*/, // Android browser local storage errors related to a full disk.
    /.*redefine .*property.*/, // AdBlock/userAgent/etc.
    /.*Request aborted.*/, // Expected Axios behavior for aborted requests.
    /.*ResizeObserver loop limit exceeded*/, // Benign browser bug in Chrome / Edge on Windows.
    /.*SecurityError: The operation is insecure.*/, // Firefox SSL error that happens if the App is SSL and accesses something that is not SSL.
    /.*status.*401.*/, // Happens when a user session times out.
    /.*status.*403.*/, // Insufficient access.
    /.*status.*404.*/, // We actually care about why people get 404's, just not quite yet.
    /.*status.*410.*/, // 410 Gone data responses are acceptable.
    /.*status.*422.*/, // 422 Throttled responses are acceptable.
    /.*The operation failed for reasons unrelated to the database itself.*/, // Firefox error.
    /.*The requested version.*/, // Database caching sync error.
    /.*The user denied permission to access the database.*/, // User at fault.
    /.*Transaction timed out due to inactivity.*/, // Timeouts usually caused by losing connection or switching networks.
    /.*Unable to open database.*/, // IndexedDB error on Apple devices.
    /.*window.onunload is not a function.*/, // Facebook browser issue.
    /.*is not a child of this node*/, // There are a lot of handled errors coming from upstreams that we are honestly sick of losing quota to if no one is going to fix them.
  ],
  denyUrls: [
    /edge\.fscdn\.org\/assets\/static\/css\//, // These CSS chunk load errors seem to happen when you navigate away before the page is fully loaded.
  ],
  // Only care about code we nominally own and host. This should be cleaner than one-offing tons of urls to ignore
  allowUrls: [
    /edge\.fscdn\.org/, // Primary location. This is our Akamai CDN where build assets (read: code) are deployed to.
    /familysearchcdn\.org/,
    /https?:\/\/((www|beta|integration)\.)?familysearch\.org/, // googleads URL-encodes our pages and passes them around in GET parameters, so we need to be a bit more precise than otherwise.
  ],
}

/**
 * Extend our tree default on top of the zion-provided configuration.
 * @param {object} [config] - Optional. Any extended configuration that is needed by any individual app.
 * @returns {object} - The fully-extended Sentry configuration object.
 * @example // How to integrate the Sentry config in your app.js
   if (sentryDSN) {
       Sentry.init(
       getSentryConfig({
         ignoreErrors: [],
         allowUrls: [],
         denyUrls: [],
       })
     )
   }
 */
export default function getConfig(config = {}) {
  const { ignoreErrors = [], allowUrls = [], denyUrls = [] } = config
  return {
    ...zionSentryDefaults,
    ...treeSentryDefaults,
    dsn: sentryDSN,
    ...config,
    ignoreErrors: [...(zionSentryDefaults.ignoreErrors || []), ...treeSentryDefaults.ignoreErrors, ...ignoreErrors],
    allowUrls: [...(zionSentryDefaults.allowUrls || []), ...treeSentryDefaults.allowUrls, ...allowUrls],
    denyUrls: [...(zionSentryDefaults.denyUrls || []), ...treeSentryDefaults.denyUrls, ...denyUrls],
  }
}

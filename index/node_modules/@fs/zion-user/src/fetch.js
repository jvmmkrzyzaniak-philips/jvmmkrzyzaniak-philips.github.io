import axios from '@fs/zion-axios'
import { validUserSessionOrError } from '@fs/zion-session'
import { getCachedUser, setCachedUser } from './cache'
import normalize from './normalize'

const hasWindow = typeof window !== 'undefined'

const axiosInstance = axios.create()

let axiosPromise

export default async function fetchUser() {
  validUserSessionOrError()

  const cachedUser = getCachedUser()
  // Check to make sure we have a window object, and dtrum is on it.
  // We also only want to do send this to dyna if we have a user in cache.
  if (hasWindow && window.dtrum && cachedUser) {
    window.dtrum?.identifyUser(cachedUser?.user?.cisId)
  }
  // This is an alternative way to send the user to dynatrace.
  // We have instead decided for the time being to use the
  // dynatrace API call identifyUser (above).
  // window.FS?.attrs?.cisId = cachedUser?.cisId

  if (cachedUser) return cachedUser

  const url = '/service/tree/ftuser/users/CURRENT'
  axiosPromise = axiosPromise || axiosInstance.get(url)

  const { data: user } = await axiosPromise
  axiosPromise = false
  user && setCachedUser(user)
  return normalize(user)
}

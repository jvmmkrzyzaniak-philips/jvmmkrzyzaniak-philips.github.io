import { i18n } from '@fs/zion-locale'

/**
 * Create the relationship map that has the translated values for the relationships we handle.
 * Note: Be careful not to call this frequently as it can be expensive to execute.
 * @returns {object} A hash of translated values.
 * @see getRelationshipLabel()
 */
export function createRelationshipMap() {
  const relationshipLabels = {
    adoptedchild: i18n.t('relationship.adoptedchild', 'Adopted Child'),
    adopteddaughter: i18n.t('relationship.adopteddaughter', 'Adopted Daughter'),
    adopteddaughterinlaw: i18n.t('relationship.adopteddaughterinlaw', 'Adopted Daughter-in-law'),
    adoptedgrandson: i18n.t('relationship.adoptedgrandson', 'Adopted Grandson'),
    adoptedniece: i18n.t('relationship.adoptedniece', 'Adopted Niece'),
    adoptedson: i18n.t('relationship.adoptedson', 'Adopted Son'),
    adoptivefather: i18n.t('relationship.adoptivefather', 'Adoptive Father'),
    adoptivemother: i18n.t('relationship.adoptivemother', 'Adoptive Mother'),
    adoptiveparent: i18n.t('relationship.adoptiveparent', 'Adoptive Parent'),
    ancestor: i18n.t('relationship.ancestor', 'Ancestor'),
    apprentice: i18n.t('relationship.apprentice', 'Apprentice'),
    assistant: i18n.t('relationship.assistant', 'Assistant'),
    assistanthead: i18n.t('relationship.assistanthead', 'Assistant Head'),
    assistantpastor: i18n.t('relationship.assistantpastor', 'Assistant Pastor'),
    attaché: i18n.t('relationship.attaché', 'Attaché'),
    attendantpriest: i18n.t('relationship.attendantpriest', 'Attendant Priest'),
    auditor: i18n.t('relationship.auditor', 'Auditor'),
    aunt: i18n.t('relationship.aunt', 'Aunt'),
    auntinlaw: i18n.t('relationship.auntinlaw', 'Aunt-in-law'),
    auntsson: i18n.t('relationship.auntsson', "Aunt's Son"),
    bartender: i18n.t('relationship.bartender', 'Bartender'),
    boarder: i18n.t('relationship.boarder', 'Boarder'),
    boarderschild: i18n.t('relationship.boarderschild', "Boarder's Child"),
    boarderswife: i18n.t('relationship.boarderswife', "Boarder's Wife"),
    bookkeeper: i18n.t('relationship.bookkeeper', 'Bookkeeper'),
    boy: i18n.t('relationship.boy', 'Boy'),
    bride: i18n.t('relationship.bride', 'Bride'),
    brother: i18n.t('relationship.brother', 'Brother'),
    brotherinlaw: i18n.t('relationship.brotherinlaw', 'Brother-in-law'),
    butler: i18n.t('relationship.butler', 'Butler'),
    caretaker: i18n.t('relationship.caretaker', 'Caretaker'),
    chauffeur: i18n.t('relationship.chauffeur', 'Chauffeur'),
    child: i18n.t('relationship.child', 'Child'),
    childinlaw: i18n.t('relationship.childinlaw', 'Child-in-law'),
    clerk: i18n.t('relationship.clerk', 'Clerk'),
    companion: i18n.t('relationship.companion', 'Companion'),
    cook: i18n.t('relationship.cook', 'Cook'),
    cooksdaughter: i18n.t('relationship.cooksdaughter', "Cook's Daughter"),
    courtward: i18n.t('relationship.courtward', 'Court ward'),
    cousin: i18n.t('relationship.cousin', 'Cousin'),
    cousininlaw: i18n.t('relationship.cousininlaw', 'Cousin-in-law'),
    cousinsgrandson: i18n.t("relationship.cousin'sgrandson", "Cousin's grandson"),
    curate: i18n.t('relationship.curate', 'Curate'),
    daughter: i18n.t('relationship.daughter', 'Daughter'),
    daughterinlaw: i18n.t('relationship.daughterinlaw', 'Daughter-in-law'),
    deceased: i18n.t('relationship.deceased', 'Deceased'),
    dependent: i18n.t('relationship.dependent', 'Dependent'),
    descendant: i18n.t('relationship.descendant', 'Descendant'),
    dishwasher: i18n.t('relationship.dishwasher', 'Dishwasher'),
    divorcedspouse: i18n.t('relationship.divorcedspouse', 'Divorced Spouse'),
    domestic: i18n.t('relationship.domestic', 'Domestic'),
    domestichusband: i18n.t('relationship.domestichusband', 'Domestic Husband'),
    domesticpartner: i18n.t('relationship.domesticpartner', 'Domestic Partner'),
    domesticspouse: i18n.t('relationship.domesticspouse', 'Domestic Spouse'),
    domesticwife: i18n.t('relationship.domesticwife', 'Domestic Wife'),
    employee: i18n.t('relationship.employee', 'Employee'),
    exhusband: i18n.t('relationship.exhusband', 'Ex-husband'),
    exspouse: i18n.t('relationship.exspouse', 'Ex-spouse'),
    exwife: i18n.t('relationship.exwife', 'Ex-wife'),
    farmhand: i18n.t('relationship.farmhand', 'Farm Hand'),
    father: i18n.t('relationship.father', 'Father'),
    fatherinlaw: i18n.t('relationship.fatherinlaw', 'Father-in-law'),
    femaleancestor: i18n.t('relationship.femaleancestor', 'Female Ancestor'),
    femalecousin: i18n.t('relationship.femalecousin', 'Female Cousin'),
    femaledescendant: i18n.t('relationship.femaledescendant', 'Female Descendant'),
    femalefiance: i18n.t('relationship.femalefiance', 'Female Fiance'),
    femalerelative: i18n.t('relationship.femalerelative', 'Female Relative'),
    fiance: i18n.t('relationship.fiance', 'Fiance'),
    fiancé: i18n.t('relationship.fiancé', 'Fiancé'),
    fiancée: i18n.t('relationship.fiancée', 'Fiancée'),
    fosterchild: i18n.t('relationship.fosterchild', 'Foster Child'),
    fosterdaughter: i18n.t('relationship.fosterdaughter', 'Foster Daughter'),
    fosterfather: i18n.t('relationship.fosterfather', 'Foster Father'),
    fostermother: i18n.t('relationship.fostermother', 'Foster Mother'),
    fosterparent: i18n.t('relationship.fosterparent', 'Foster Parent'),
    fostersister: i18n.t('relationship.fostersister', 'Foster Sister'),
    fosterson: i18n.t('relationship.fosterson', 'Foster Son'),
    foundling: i18n.t('relationship.foundling', 'Foundling'),
    friend: i18n.t('relationship.friend', 'Friend'),
    gardener: i18n.t('relationship.gardener', 'Gardener'),
    gatherer: i18n.t('relationship.gatherer', 'Gatherer'),
    girl: i18n.t('relationship.girl', 'Girl'),
    godchild: i18n.t('relationship.godchild', 'God Child'),
    goddaughter: i18n.t('relationship.goddaughter', 'God Daughter'),
    godfather: i18n.t('relationship.godfather', 'Godfather'),
    godmother: i18n.t('relationship.godmother', 'Godmother'),
    godparent: i18n.t('relationship.godparent', 'Godparent'),
    godson: i18n.t('relationship.godson', 'Godson'),
    governess: i18n.t('relationship.governess', 'Governess'),
    grandaunt: i18n.t('relationship.grandaunt', 'Grandaunt'),
    grandchild: i18n.t('relationship.grandchild', 'Grandchild'),
    granddaughter: i18n.t('relationship.granddaughter', 'Granddaughter'),
    granddaughterinlaw: i18n.t('relationship.granddaughterinlaw', 'Granddaughter-in-law'),
    grandfather: i18n.t('relationship.grandfather', 'Grandfather'),
    grandfatherinlaw: i18n.t('relationship.grandfatherinlaw', 'Grandfather-in-law'),
    grandmother: i18n.t('relationship.grandmother', 'Grandmother'),
    grandmotherinlaw: i18n.t('relationship.grandmotherinlaw', 'Grandmother-in-law'),
    grandnephew: i18n.t('relationship.grandnephew', 'Grandnephew'),
    grandniece: i18n.t('relationship.grandniece', 'Grandniece'),
    grandparent: i18n.t('relationship.grandparent', 'Grandparent'),
    grandson: i18n.t('relationship.grandson', 'Grandson'),
    grandsoninlaw: i18n.t('relationship.grandsoninlaw', 'Grandson-in-law'),
    granduncle: i18n.t('relationship.granduncle', 'Granduncle'),
    greatgrandchild: i18n.t('relationship.greatgrandchild', 'Great-grandchild'),
    greatgranddaughter: i18n.t('relationship.greatgranddaughter', 'Great-granddaughter'),
    greatgrandmother: i18n.t('relationship.greatgrandmother', 'Great-grandmother'),
    greatgrandmotherinlaw: i18n.t('relationship.greatgrandmotherinlaw', 'Great-grandmother-in-law'),
    greatgrandson: i18n.t('relationship.greatgrandson', 'Great-grandson'),
    greatgreatgrandson: i18n.t('relationship.greatgreatgrandson', 'Great-great-grandson'),
    groom: i18n.t('relationship.groom', 'Groom'),
    guardianchild: i18n.t('relationship.guardianchild', 'Guardian Child'),
    guardiandaughter: i18n.t('relationship.guardiandaughter', 'Guardian Daughter'),
    guardianfather: i18n.t('relationship.guardianfather', 'Guardian Father'),
    guardianmother: i18n.t('relationship.guardianmother', 'Guardian Mother'),
    guardianparent: i18n.t('relationship.guardianparent', 'Guardian Parent'),
    guardianson: i18n.t('relationship.guardianson', 'Guardian Son'),
    guest: i18n.t('relationship.guest', 'Guest'),
    halfbrother: i18n.t('relationship.halfbrother', 'Half-brother'),
    halfsister: i18n.t('relationship.halfsister', 'Half-sister'),
    halfsisterinlaw: i18n.t('relationship.halfsisterinlaw', 'Half-sister-in-law'),
    hand: i18n.t('relationship.hand', 'Hand'),
    handyman: i18n.t('relationship.handyman', 'Handyman'),
    head: i18n.t('relationship.head', 'Head'),
    help: i18n.t('relationship.help', 'Help'),
    helper: i18n.t('relationship.helper', 'Helper'),
    hermanoorbrother: i18n.t('relationship.hermanoorbrother', 'Hermano or brother'),
    hijoorson: i18n.t('relationship.hijoorson', 'Hijo or son'),
    hired: i18n.t('relationship.hired', 'Hired'),
    hiredboarder: i18n.t('relationship.hiredboarder', 'Hired Boarder'),
    hiredgentleman: i18n.t('relationship.hiredgentleman', 'Hired Gentleman'),
    hiredgirl: i18n.t('relationship.hiredgirl', 'Hired girl'),
    hiredhand: i18n.t('relationship.hiredhand', 'Hired hand'),
    hiredhandsdaughter: i18n.t('relationship.hiredhandsdaughter', "Hired Hand's Daughter"),
    hiredhandsson: i18n.t('relationship.hiredhandsson', "Hired Hand's Son"),
    hiredhandswife: i18n.t('relationship.hiredhandswife', "Hired Hand's Wife"),
    hiredhelp: i18n.t('relationship.hiredhelp', 'Hired Help'),
    hiredman: i18n.t('relationship.hiredman', 'Hired man'),
    hiredservant: i18n.t('relationship.hiredservant', 'Hired Servant'),
    hotelguest: i18n.t('relationship.hotelguest', 'Hotel Guest'),
    houseboy: i18n.t('relationship.houseboy', 'Houseboy'),
    househelper: i18n.t('relationship.househelper', 'House Helper'),
    housekeeper: i18n.t('relationship.housekeeper', 'Housekeeper'),
    housekeepersdaughter: i18n.t("relationship.housekeeper'sdaughter", "Housekeeper's daughter"),
    housekeepersgranddaughter: i18n.t('relationship.housekeepersgranddaughter', "Housekeeper's Granddaughter"),
    housekeepersgrandson: i18n.t('relationship.housekeepersgrandson', "Housekeeper's Grandson"),
    housekeepersson: i18n.t("relationship.housekeeper'sson", "Housekeeper's son"),
    housekeeperssoninlaw: i18n.t('relationship.housekeeperssoninlaw', "Housekeeper's Son-in-law"),
    housemaid: i18n.t('relationship.housemaid', 'Housemaid'),
    houseman: i18n.t('relationship.houseman', 'House Man'),
    houseservant: i18n.t('relationship.houseservant', 'House servant'),
    housewife: i18n.t('relationship.housewife', 'Housewife'),
    houseworker: i18n.t('relationship.houseworker', 'House Worker'),
    husband: i18n.t('relationship.husband', 'Husband'),
    inlawshusband: i18n.t('relationship.inlawshusband', "In-law's husband"),
    inmate: i18n.t('relationship.inmate', 'Inmate'),
    journeyman: i18n.t('relationship.journeyman', 'Journeyman'),
    laborer: i18n.t('relationship.laborer', 'Laborer'),
    laundress: i18n.t('relationship.laundress', 'Laundress'),
    lodger: i18n.t('relationship.lodger', 'Lodger'),
    lodgersbrother: i18n.t('relationship.lodgersbrother', "Lodger's Brother"),
    lodgersdaughter: i18n.t("relationship.lodger'sdaughter", "Lodger's Daughter"),
    lodgersfatherinlaw: i18n.t('relationship.lodgersfatherinlaw', "Lodger's Father-in-law"),
    lodgersgranddaughter: i18n.t('relationship.lodgersgranddaughter', "Lodger's Granddaughter"),
    lodgersmother: i18n.t('relationship.lodgersmother', "Lodger's Mother"),
    lodgersmotherinlaw: i18n.t('relationship.lodgersmotherinlaw', "Lodger's Mother-in-law"),
    lodgersniece: i18n.t('relationship.lodgersniece', "Lodger's Niece"),
    lodgerssister: i18n.t('relationship.lodgerssister', "Lodger's Sister"),
    lodgersson: i18n.t('relationship.lodgersson', "Lodger's Son"),
    lodgerswife: i18n.t("relationship.lodger'swife", "Lodger's Wife"),
    maid: i18n.t('relationship.maid', 'Maid'),
    maidandcook: i18n.t('relationship.maidandcook', 'Maid and Cook'),
    maidschild: i18n.t('relationship.maidschild', "Maid's Child"),
    maidservant: i18n.t('relationship.maidservant', 'Maidservant'),
    maidssister: i18n.t('relationship.maidssister', "Maid's Sister"),
    maidsson: i18n.t('relationship.maidsson', "Maid's Son"),
    maleancestor: i18n.t('relationship.maleancestor', 'Male Ancestor'),
    malecousin: i18n.t('relationship.malecousin', 'Male Cousin'),
    maledescendant: i18n.t('relationship.maledescendant', 'Male Descendant'),
    malefiance: i18n.t('relationship.malefiance', 'Male Fiance'),
    malerelative: i18n.t('relationship.malerelative', 'Male Relative'),
    military: i18n.t('relationship.military', 'Military'),
    mother: i18n.t('relationship.mother', 'Mother'),
    motherinlaw: i18n.t('relationship.motherinlaw', 'Mother-in-law'),
    mothershelper: i18n.t('relationship.mothershelper', "Mother's Helper"),
    nephew: i18n.t('relationship.nephew', 'Nephew'),
    nephewinlaw: i18n.t('relationship.nephewinlaw', 'Nephew-in-law'),
    nepheworniece: i18n.t('relationship.nepheworniece', 'Nephew or Niece'),
    newsboy: i18n.t('relationship.newsboy', 'Newsboy'),
    niece: i18n.t('relationship.niece', 'Niece'),
    nieceinlaw: i18n.t('relationship.nieceinlaw', 'Niece-in-law'),
    nonrelative: i18n.t('relationship.nonrelative', 'Non Relative'),
    nurse: i18n.t('relationship.nurse', 'Nurse'),
    nursemaid: i18n.t('relationship.nursemaid', 'Nursemaid'),
    orphan: i18n.t('relationship.orphan', 'Orphan'),
    other: i18n.t('relationship.other', 'Other'),
    otherrelative: i18n.t('relationship.otherrelative', 'Other Relative'),
    parent: i18n.t('relationship.parent', 'Parent'),
    parentinlaw: i18n.t('relationship.parentinlaw', 'Parent-in-law'),
    partner: i18n.t('relationship.partner', 'Partner'),
    partnersdaughter: i18n.t('relationship.partnersdaughter', "Partner's Daughter"),
    partnersson: i18n.t("relationship.partner'sson", "Partner's son"),
    partnerswife: i18n.t("relationship.partner'swife", "Partner's wife"),
    patient: i18n.t('relationship.patient', 'Patient'),
    pauper: i18n.t('relationship.pauper', 'Pauper'),
    relative: i18n.t('relationship.relative', 'Relative'),
    religious: i18n.t('relationship.religious', 'Religious'),
    roomer: i18n.t('relationship.roomer', 'Roomer'),
    roomersdaughter: i18n.t('relationship.roomersdaughter', "Roomer's Daughter"),
    roomerssnephew: i18n.t('relationship.roomerssnephew', "Roomers's Nephew"),
    roomersson: i18n.t('relationship.roomersson', "Roomer's Son"),
    roomerswife: i18n.t('relationship.roomerswife', "Roomer's Wife"),
    saleswoman: i18n.t('relationship.saleswoman', 'Saleswoman'),
    schoolteacher: i18n.t('relationship.schoolteacher', 'Schoolteacher'),
    secondcousin: i18n.t('relationship.secondcousin', 'Second Cousin'),
    secondwife: i18n.t('relationship.secondwife', 'Second Wife'),
    servant: i18n.t('relationship.servant', 'Servant'),
    servantsdaughter: i18n.t('relationship.servantsdaughter', "Servant's Daughter"),
    servantsson: i18n.t('relationship.servantsson', "Servant's Son"),
    servantswife: i18n.t("relationship.servant'swife", "Servant's wife"),
    sibling: i18n.t('relationship.sibling', 'Sibling'),
    siblinginlaw: i18n.t('relationship.siblinginlaw', 'Sibling-in-law'),
    sister: i18n.t('relationship.sister', 'Sister'),
    sisterinlaw: i18n.t('relationship.sisterinlaw', 'Sister-in-law'),
    son: i18n.t('relationship.son', 'Son'),
    soninlaw: i18n.t('relationship.soninlaw', 'Son-in-law'),
    soninlawssister: i18n.t('relationship.soninlawssister', "Son-in-law's sister"),
    sonorsister: i18n.t('relationship.sonorsister', 'Son or Sister'),
    spouse: i18n.t('relationship.spouse', 'Spouse'),
    statewardboarder: i18n.t('relationship.statewardboarder', 'State Ward Boarder'),
    stenographer: i18n.t('relationship.stenographer', 'Stenographer'),
    stepbrother: i18n.t('relationship.stepbrother', 'Step-brother'),
    stepbrotherinlaw: i18n.t('relationship.stepbrotherinlaw', 'Step-brother-in-law'),
    stepchild: i18n.t('relationship.stepchild', 'Step-child'),
    stepdaughter: i18n.t('relationship.stepdaughter', 'Step-daughter'),
    stepdaughterinlaw: i18n.t('relationship.stepdaughterinlaw', 'Step-daughter-in-law'),
    stepfather: i18n.t('relationship.stepfather', 'Step-father'),
    stepfatherinlaw: i18n.t('relationship.stepfatherinlaw', 'Step-father-in-law'),
    stepgrandchild: i18n.t('relationship.stepgrandchild', 'Step-grandchild'),
    stepgranddaughter: i18n.t('relationship.stepgranddaughter', 'Step-granddaughter'),
    stepgrandson: i18n.t('relationship.stepgrandson', 'Step-grandson'),
    stepmother: i18n.t('relationship.stepmother', 'Step-mother'),
    stepmotherinlaw: i18n.t('relationship.stepmotherinlaw', 'Step-mother-in-law'),
    stepniece: i18n.t('relationship.stepniece', 'Step-niece'),
    stepparent: i18n.t('relationship.stepparent', 'Step-parent'),
    stepsibling: i18n.t('relationship.stepsibling', 'Step-sibling'),
    stepsister: i18n.t('relationship.stepsister', 'Step-sister'),
    stepson: i18n.t('relationship.stepson', 'Step-son'),
    stepsoninlaw: i18n.t('relationship.stepsoninlaw', 'Step-son-in-law'),
    student: i18n.t('relationship.student', 'Student'),
    subject: i18n.t('relationship.subject', 'Subject'),
    subtenant: i18n.t('relationship.subtenant', 'Subtenant'),
    sweetheart: i18n.t('relationship.sweetheart', 'Sweetheart'),
    teacher: i18n.t('relationship.teacher', 'Teacher'),
    tenant: i18n.t('relationship.tenant', 'Tenant'),
    tenantsson: i18n.t('relationship.tenantsson', "Tenant's Son"),
    tenantswife: i18n.t('relationship.tenantswife', "Tenant's Wife"),
    uncle: i18n.t('relationship.uncle', 'Uncle'),
    uncleinlaw: i18n.t('relationship.uncleinlaw', 'Uncle-in-law'),
    uncleoraunt: i18n.t('relationship.uncleoraunt', 'Uncle or Aunt'),
    unknown: i18n.t('relationship.unknown', 'Unknown'),
    wagehand: i18n.t('relationship.wagehand', 'Wage Hand'),
    waiter: i18n.t('relationship.waiter', 'Waiter'),
    waitress: i18n.t('relationship.waitress', 'Waitress'),
    ward: i18n.t('relationship.ward', 'Ward'),
    widow: i18n.t('relationship.widow', 'Widow'),
    wife: i18n.t('relationship.wife', 'Wife'),
    worker: i18n.t('relationship.worker', 'Worker'),
  }

  return relationshipLabels
}

let relationshipMap = null

/**
 * Removes whitespace and apostrophes from relationship, to use as lookup key
 * @param {string} relationship relationship identifier
 * @returns {string} formatted key for relationshipMap
 */
function formatRelationshipMapKey(relationship) {
  return relationship?.replace(/[\s']/g, '').toLowerCase()
}

/**
 * Return the appropriate relationship label for the labelKey or other from the relationshipType object.
 * @param {object} relationshipType where 'labelKey' or 'other' has the desired relationship identifier.
 * @returns {string} the label to use or '' (e.g. blank).
 */
export function getRelationshipLabel(relationshipType) {
  if (!relationshipMap) {
    relationshipMap = createRelationshipMap()
  }
  let label =
    relationshipMap[formatRelationshipMapKey(relationshipType?.labelKey)] ||
    relationshipMap[formatRelationshipMapKey(relationshipType?.other)]
  if (!label) {
    if (relationshipType?.labelKey || relationshipType?.other) {
      // We want to log this into Sentry so we can fix up missing translations
      console.error(
        `WARNING: Relationship label not found for labelKey:${relationshipType?.labelKey}, other:${relationshipType?.other}, url:${window.location.href}`
      )
    }
    label = relationshipType?.other || ''
  }
  return label
}

export const siblingRelationshipMap = {
  type: 'http://familysearch.org/types/relationships/Sibling',
  category: 'parentsSiblings',
  person1: { M: 'Brother', F: 'Sister', U: 'Sibling' },
  person2: { M: 'Brother', F: 'Sister', U: 'Sibling' },
}

export const unknownRelationshipMap = {
  type: 'http://familysearch.org/types/relationships/Unknown',
  category: 'othersOnRecord',
  person1: { M: 'Unknown', F: 'Unknown', U: 'Unknown' },
  person2: { M: 'Unknown', F: 'Unknown', U: 'Unknown' },
}

// See https://icseng.atlassian.net/wiki/spaces/Product/pages/133603302/Relationship+Types
// The map entry with no 'id' field is considered the default map and must be at the end of the 'type' list
export const relationshipTypeMaps = [
  {
    type: 'http://gedcomx.org/ParentChild',
    id: 'http://familysearch.org/types/relationships/AdoptedParent',
    gedId: 'http://gedcomx.org/AdoptiveParent',
    category: 'parentsSiblings',
    person1: { M: 'AdoptedSon', F: 'AdoptedDaughter', U: 'AdoptedChild' },
    person2: { M: 'AdoptiveFather', F: 'AdoptiveMother', U: 'AdoptiveParent' },
  },
  {
    type: 'http://gedcomx.org/ParentChild',
    id: 'http://familysearch.org/types/relationships/FosterParentChild',
    gedId: 'http://gedcomx.org/FosterParent',
    category: 'parentsSiblings',
    person1: { M: 'FosterSon', F: 'FosterDaughter', U: 'FosterChild' },
    person2: { M: 'FosterFather', F: 'FosterMother', U: 'FosterParent' },
  },
  {
    type: 'http://gedcomx.org/ParentChild',
    id: 'http://familysearch.org/types/relationships/GuardianParentChild',
    gedId: 'http://gedcomx.org/GuardianParent',
    category: 'parentsSiblings',
    person1: { M: 'GuardianSon', F: 'GuardianDaughter', U: 'GuardianChild' },
    person2: { M: 'GuardianFather', F: 'GuardianMother', U: 'GuardianParent' },
  },
  {
    type: 'http://gedcomx.org/ParentChild',
    id: 'http://familysearch.org/types/relationships/StepParentChild',
    gedId: 'http://gedcomx.org/StepParent',
    category: 'parentsSiblings',
    person1: { M: 'StepSon', F: 'StepDaughter', U: 'StepChild' },
    person2: { M: 'StepFather', F: 'StepMother', U: 'StepParent' },
  },
  {
    // Catch all - no ID specified
    type: 'http://gedcomx.org/ParentChild',
    category: 'parentsSiblings',
    person1: { M: 'Son', F: 'Daughter', U: 'Child' },
    person2: { M: 'Father', F: 'Mother', U: 'Parent' },
  },
  {
    type: 'http://gedcomx.org/Godparent',
    category: 'extendedFamily',
    person1: { M: 'GodSon', F: 'GodDaughter', U: 'GodChild' },
    person2: { M: 'GodFather', F: 'GodMother', U: 'GodParent' },
  },
  {
    type: 'http://familysearch.org/types/relationships/ParentChildInLaw',
    person1: { M: 'SonInLaw', F: 'DaughterInLaw', U: 'ChildInLaw', category: 'spouseChildren' },
    person2: { M: 'FatherInLaw', F: 'MotherInLaw', U: 'ParentInLaw', category: 'parentsSiblings' },
  },
  {
    type: 'http://familysearch.org/types/relationships/GrandParent',
    category: 'extendedFamily',
    person1: { M: 'Grandson', F: 'Granddaughter', U: 'Grandchild' },
    person2: { M: 'Grandfather', F: 'Grandmother', U: 'Grandparent' },
  },
  {
    type: 'http://familysearch.org/types/relationships/AuntOrUncle',
    category: 'extendedFamily',
    person1: { M: 'Nephew', F: 'Niece', U: 'NephewOrNiece' },
    person2: { M: 'Uncle', F: 'Aunt', U: 'UncleOrAunt' },
  },
  {
    type: 'http://familysearch.org/types/relationships/Cousin',
    category: 'extendedFamily',
    person1: { M: 'MaleCousin', F: 'FemaleCousin', U: 'Cousin' },
    person2: { M: 'MaleCousin', F: 'FemaleCousin', U: 'Cousin' },
  },
  {
    type: 'http://gedcomx.org/Couple',
    id: 'http://familysearch.org/types/relationships/DivorcedCouple',
    gedId: 'http://gedcomx.org/Divorce',
    category: 'spouseChildren',
    person1: { M: 'ExHusband', F: 'ExWife', U: 'ExSpouse' },
    person2: { M: 'ExHusband', F: 'ExWife', U: 'ExSpouse' },
  },
  {
    type: 'http://gedcomx.org/Couple',
    id: 'http://familysearch.org/types/relationships/Fiance',
    gedId: 'http://gedcomx.org/Engagement',
    category: 'spouseChildren',
    person1: { M: 'MaleFiance', F: 'FemaleFiance', U: 'Fiance' },
    person2: { M: 'MaleFiance', F: 'FemaleFiance', U: 'Fiance' },
  },
  {
    type: 'http://gedcomx.org/Couple',
    id: 'http://familysearch.org/types/relationships/DomesticPartnership',
    gedId: 'http://gedcomx.org/DomesticPartnership',
    category: 'spouseChildren',
    person1: { M: 'DomesticHusband', F: 'DomesticWife', U: 'DomesticSpouse' },
    person2: { M: 'DomesticHusband', F: 'DomesticWife', U: 'DomesticSpouse' },
  },
  {
    type: 'http://gedcomx.org/Couple',
    category: 'spouseChildren',
    person1: { M: 'Husband', F: 'Wife', U: 'Spouse' },
    person2: { M: 'Husband', F: 'Wife', U: 'Spouse' },
  },
  siblingRelationshipMap,
  {
    type: 'http://familysearch.org/types/relationships/StepSibling',
    category: 'parentsSiblings',
    person1: { M: 'StepBrother', F: 'StepSister', U: 'StepSibling' },
    person2: { M: 'StepBrother', F: 'StepSister', U: 'StepSibling' },
  },
  {
    type: 'http://familysearch.org/types/relationships/SiblingInLaw',
    category: 'parentsSiblings',
    person1: { M: 'BrotherInLaw', F: 'SisterInLaw', U: 'SiblingInLaw' },
    person2: { M: 'BrotherInLaw', F: 'SisterInLaw', U: 'SiblingInLaw' },
  },
  {
    type: 'http://familysearch.org/types/relationships/Descendant',
    category: 'extendedFamily',
    person1: { M: 'MaleDescendant', F: 'FemaleDescendant', U: 'Descendant' },
    person2: { M: 'MaleAncestor', F: 'FemaleAncestor', U: 'Ancestor' },
  },
  {
    type: 'http://familysearch.org/types/relationships/Relative',
    category: 'extendedFamily',
    person1: { M: 'MaleRelative', F: 'FemaleRelative', U: 'Relative' },
    person2: { M: 'MaleRelative', F: 'FemaleRelative', U: 'Relative' },
  },
  unknownRelationshipMap,
  {
    type: 'http://familysearch.org/types/relationships/NonRelative',
    category: 'othersOnRecord',
    person1: { M: 'Nonrelative', F: 'Nonrelative', U: 'Nonrelative' },
    person2: { M: 'Nonrelative', F: 'Nonrelative', U: 'Nonrelative' },
  },
]

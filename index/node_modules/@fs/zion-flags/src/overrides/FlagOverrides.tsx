import React, { Suspense, useContext, useEffect } from 'react'
import zionDebug from '@fs/zion-debug'
import { FeatureFlagsContext } from '../FeatureFlagsProvider'
import useLocalStorageFlags from './useLocalStorageFlags'
import type { Flag } from '../model'

const hasWindow = typeof window !== 'undefined'
const debug = zionDebug('zion:flags:overrides')

const FlagOverridesUi = React.lazy(() => import('./FlagOverridesUi'))

/** Handlers for adding and removing overrides */
export type FlagOverrideHandlers = {
  add: (name: string, override: Flag<unknown>) => void
  remove: (name: string) => void
  removeAll: () => void
}

export default function FlagOverrides({
  hideAdminOverlay = false, // for Zion storybook
  onClose, // for Zion storybook
  showOverrides = false, // for Zion storybook
}: {
  hideAdminOverlay?: boolean
  onClose?: () => void
  showOverrides?: boolean
}): JSX.Element | null {
  const { localStorageFlags, localStorageFlagHandlers } = useLocalStorageFlags()
  debug('LocalStorageFlags', localStorageFlags)

  const context = useContext(FeatureFlagsContext)
  debug('FeatureFlagProvider context', context)

  const { flagOverrides, setFlagOverrides, mockFlags } = context ?? {}

  // Check for special query param
  const urlParams = new URLSearchParams(hasWindow ? window.location.search : '')
  const showFlagOverridesUi =
    showOverrides ||
    urlParams.has('showFlags') ||
    (!!mockFlags && Object.keys(mockFlags).length > 0) ||
    (flagOverrides && Object.keys(flagOverrides).length > 0)

  useEffect(() => {
    setFlagOverrides && setFlagOverrides(localStorageFlags)
  }, [setFlagOverrides, localStorageFlags])

  if (!context) {
    if (process.env.NODE_ENV === 'development') {
      console.error('<FlagOverrides/> must be used within a FeatureFlagsProvider')
    }
    return null
  }

  return (
    <Suspense fallback={<div />}>
      {showFlagOverridesUi && (
        <FlagOverridesUi
          flagOverrides={flagOverrides}
          flagOverrideHandlers={localStorageFlagHandlers}
          hideAdminOverlay={hideAdminOverlay}
          inLocalhostMode={!!mockFlags}
          onClose={onClose}
          showOverrides={showOverrides}
        />
      )}
    </Suspense>
  )
}

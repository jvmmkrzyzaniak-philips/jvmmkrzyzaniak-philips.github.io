import React, { useRef, useState } from 'react'
import { css, cx } from '@linaria/core'
import { WhiteTheme, IconButton, Ellipsis, Row, Cell } from '@fs/zion-ui'
import { MenuClose } from '@fs/zion-icon'
import { useResizeObserver } from '@fs/zion-frontend-friends'

export const roleIndicatorCss = css`
  --page-content-height: calc(
    var(--layout-viewport-height) - var(--role-indicator-height) - var(--role-indicator-border)
  );
  display: flex;
  flex-direction: column;
  border-inline-start: solid var(--role-indicator-border) var(--role-indicator-color);
  border-inline-end: solid var(--role-indicator-border) var(--role-indicator-color);
  min-height: calc(
    var(--layout-viewport-height) - var(--role-indicator-height) - var(--role-indicator-border)
  ); /* Keeps the footer at the bottom of the screen on very short pages */
  margin-top: var(--role-indicator-height);

  @media print {
    border: none;
    margin-top: 0;
  }
`

const borderCss = css`
  position: fixed;
  bottom: 0;
  width: 100%;
  height: var(--role-indicator-border);
  background: var(--role-indicator-color);
  z-index: 1;

  &::before,
  &::after {
    content: '';
    position: fixed;
    top: 0;
    width: var(--role-indicator-border);
    height: 100%;
    background: var(--role-indicator-color);
  }

  &::before {
    inset-inline-start: 0;
  }

  &::after {
    inset-inline-end: 0;
  }

  @media print {
    display: none;
  }
`

const bannerWrapperCss = css`
  position: fixed;
  z-index: 1;
  width: 100%;
  top: 0;
`

const bannerCss = css`
  background: var(--role-indicator-color);
  padding: 4px 16px;
  width: 100%;

  @media print {
    display: none;
  }
`

export default function RoleIndicator({ role, className, children }) {
  const { color, text, onExit, exitTitle } = role || {}

  const [bannerHeight, setBannerHeight] = useState(0)

  const bannerRef = useRef(null)
  useResizeObserver(bannerRef, (entry) => setBannerHeight(entry.target?.clientHeight || 0))

  return (
    <div
      className={cx(className, roleIndicatorCss)}
      style={{
        '--role-indicator-color': color,
        '--role-indicator-height': `${bannerHeight}px`,
        '--role-indicator-border': `${bannerHeight ? 4 : 0}px`,
      }}
    >
      <div ref={bannerRef} className={bannerWrapperCss}>
        {role.text && (
          <WhiteTheme className={bannerCss}>
            <Row alignY="middle">
              <Cell growX>&nbsp;</Cell>
              <Ellipsis>{text}</Ellipsis>
              <Cell growX>&nbsp;</Cell>
              <IconButton noShrinkX Icon={MenuClose} onClick={onExit} title={exitTitle} />
            </Row>
          </WhiteTheme>
        )}
      </div>
      {children}
      <div className={borderCss} />
    </div>
  )
}

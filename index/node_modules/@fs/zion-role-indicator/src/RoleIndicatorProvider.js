import React, { createContext, useContext, useState, useMemo } from 'react'
import PropTypes from 'prop-types'
import RoleIndicator from './RoleIndicator'

export const RoleIndicatorContext = createContext(null)

export default function RoleIndicatorProvider(props) {
  const [role, setRole] = useState({})

  // Memoizing the provider data, so this doesn't cause rerenders every time the children change
  const providerData = useMemo(() => ({ role, setRole }), [role])

  return (
    <RoleIndicatorContext.Provider value={providerData}>
      <RoleIndicator role={role} {...props} />
    </RoleIndicatorContext.Provider>
  )
}

RoleIndicatorProvider.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
}

export function useRoleIndicator() {
  return useContext(RoleIndicatorContext)
}

import type {
  ConclusionType,
  FullAssociationConclusionType,
  LegacyConclusionType,
  RelationshipLineageType,
} from '@fs/zion-tree-types'
import type { TFunction } from 'i18next'
import type {
  ConclusionTypeWithDate,
  ConclusionTypeWithDescription,
  ConclusionTypeWithPlace,
  DeletableConclusions,
  FullAlternateNameType,
} from '../types/conclusion'
import { ASSOCIATION_TYPES } from './maps'

export const conclusionLabelKeyMap: Record<ConclusionType | 'SLAVERY' | LegacyConclusionType, string> = {
  AFFILIATION: 'conclusion.AFFILIATION.label',
  ALTERNATE_NAME: 'conclusion.ALTERNATE_NAME.label',
  ANNULMENT: 'conclusion.ANNULMENT.label',
  APPRENTICESHIP: 'conclusion.APPRENTICESHIP.label',
  BAR_MITZVAH: 'conclusion.BAR_MITZVAH.label',
  BAS_MITZVAH: 'conclusion.BAS_MITZVAH.label',
  BIRTH: 'conclusion.BIRTH.label',
  BURIAL: 'conclusion.BURIAL.label',
  CASTE_NAME: 'conclusion.CASTE_NAME.label',
  CHRISTENING: 'conclusion.CHRISTENING.label',
  CLAN_NAME: 'conclusion.CLAN_NAME.label',
  COMMON_LAW_MARRIAGE: 'conclusion.COMMON_LAW_MARRIAGE.label',
  COUPLE_NEVER_HAD_CHILDREN: 'conclusion.COUPLE_NEVER_HAD_CHILDREN.label',
  CREMATION: 'conclusion.CREMATION.label',
  DEATH: 'conclusion.DEATH.label',
  DIVORCE: 'conclusion.DIVORCE.label',
  EMANCIPATION: 'conclusion.EMANCIPATION.label',
  EMPLOYMENT: 'conclusion.EMPLOYMENT.label',
  ENSLAVEMENT: 'conclusion.ENSLAVEMENT.label',
  GENDER: 'conclusion.GENDER.label',
  GENERATION: 'conclusion.GENERATION.label',
  GODPARENTHOOD: 'conclusion.GODPARENTHOOD.label',
  HISTORICAL_FACT: 'conclusion.HISTORICAL_FACT.label',
  HOUSEHOLD: 'conclusion.HOUSEHOLD.label',
  IMMIGRATION: 'conclusion.IMMIGRATION.label',
  LIFE_SKETCH: 'conclusion.LIFE_SKETCH.label',
  LIVED_TOGETHER: 'conclusion.LIVED_TOGETHER.label',
  MARRIAGE: 'conclusion.MARRIAGE.label',
  MILITARY_SERVICE: 'conclusion.MILITARY_SERVICE.label',
  NAME: 'conclusion.NAME.label',
  NATIONAL_ID: 'conclusion.NATIONAL_ID.label',
  NATIONAL_ORIGIN: 'conclusion.NATIONAL_ORIGIN.label',
  NATURALIZATION: 'conclusion.NATURALIZATION.label',
  NEIGHBORHOOD: 'conclusion.NEIGHBORHOOD.label',
  NO_CHILDREN: 'conclusion.NO_CHILDREN.label',
  NO_COUPLE_RELATIONSHIPS: 'conclusion.NO_COUPLE_RELATIONSHIPS.label',
  NOBILITY_TITLE: 'conclusion.NOBILITY_TITLE.label',
  OCCUPATION: 'conclusion.OCCUPATION.label',
  OTHER_EVENT: 'conclusion.OTHER_EVENT.label',
  OTHER_FACT: 'conclusion.OTHER_FACT.label',
  PARENT1_LINEAGE: 'conclusion.PARENT1_LINEAGE.label',
  PARENT2_LINEAGE: 'conclusion.PARENT2_LINEAGE.label',
  PHYSICAL_DESCRIPTION: 'conclusion.PHYSICAL_DESCRIPTION.label',
  RACE: 'conclusion.RACE.label',
  RELATION: 'conclusion.RELATION.label',
  RELIGIOUS_AFFILIATION: 'conclusion.RELIGIOUS_AFFILIATION.label',
  RESIDENCE: 'conclusion.RESIDENCE.label',
  SLAVERY: 'conclusion.SLAVERY.label',
  STILLBORN: 'conclusion.STILLBORN.label',
  TRIBE_NAME: 'conclusion.TRIBE_NAME.label',
}

export const deleteTranslationKeyMap: Record<
  Exclude<DeletableConclusions, FullAssociationConclusionType> | 'association',
  string
> = {
  AFFILIATION: 'conclusion.AFFILIATION.delete.label',
  ALTERNATE_NAME: 'conclusion.ALTERNATE_NAME.delete.label',
  ANNULMENT: 'conclusion.ANNULMENT.delete.label',
  association: 'conclusion.association.delete.label',
  BAR_MITZVAH: 'conclusion.BAR_MITZVAH.delete.label',
  BAS_MITZVAH: 'conclusion.BAS_MITZVAH.delete.label',
  BIRTH: 'conclusion.BIRTH.delete.label',
  BURIAL: 'conclusion.BURIAL.delete.label',
  CASTE_NAME: 'conclusion.CASTE_NAME.delete.label',
  CHRISTENING: 'conclusion.CHRISTENING.delete.label',
  CLAN_NAME: 'conclusion.CLAN_NAME.delete.label',
  COMMON_LAW_MARRIAGE: 'conclusion.COMMON_LAW_MARRIAGE.delete.label',
  COUPLE_NEVER_HAD_CHILDREN: 'conclusion.COUPLE_NEVER_HAD_CHILDREN.delete.label',
  CREMATION: 'conclusion.CREMATION.delete.label',
  DIVORCE: 'conclusion.DIVORCE.delete.label',
  HISTORICAL_FACT: 'conclusion.HISTORICAL_FACT.delete.label',
  IMMIGRATION: 'conclusion.IMMIGRATION.delete.label',
  LIFE_SKETCH: 'conclusion.LIFE_SKETCH.delete.label',
  LIVED_TOGETHER: 'conclusion.LIVED_TOGETHER.delete.label',
  MARRIAGE: 'conclusion.MARRIAGE.delete.label',
  MILITARY_SERVICE: 'conclusion.MILITARY_SERVICE.delete.label',
  NATIONAL_ID: 'conclusion.NATIONAL_ID.delete.label',
  NATIONAL_ORIGIN: 'conclusion.NATIONAL_ORIGIN.delete.label',
  NATURALIZATION: 'conclusion.NATURALIZATION.delete.label',
  NO_CHILDREN: 'conclusion.NO_CHILDREN.delete.label',
  NO_COUPLE_RELATIONSHIPS: 'conclusion.NO_COUPLE_RELATIONSHIPS.delete.label',
  NOBILITY_TITLE: 'conclusion.NOBILITY_TITLE.delete.label',
  OCCUPATION: 'conclusion.OCCUPATION.delete.label',
  OTHER_EVENT: 'conclusion.OTHER_EVENT.delete.label',
  OTHER_FACT: 'conclusion.OTHER_FACT.delete.label',
  PARENT1_LINEAGE: 'conclusion.PARENT1_LINEAGE.delete.label',
  PARENT2_LINEAGE: 'conclusion.PARENT2_LINEAGE.delete.label',
  PHYSICAL_DESCRIPTION: 'conclusion.PHYSICAL_DESCRIPTION.delete.label',
  RACE: 'conclusion.RACE.delete.label',
  RELIGIOUS_AFFILIATION: 'conclusion.RELIGIOUS_AFFILIATION.delete.label',
  RESIDENCE: 'conclusion.RESIDENCE.delete.label',
  STILLBORN: 'conclusion.STILLBORN.delete.label',
  TRIBE_NAME: 'conclusion.TRIBE_NAME.delete.label',
}

export const nameTypeKeyMap: Record<FullAlternateNameType, string> = {
  AKA: 'conclusion.nameType.AKA',
  BIRTH: 'conclusion.nameType.BIRTH',
  MARRIED: 'conclusion.nameType.MARRIED',
  NICK: 'conclusion.nameType.NICK',
  COURTESY: 'conclusion.nameType.COURTESY',
  ART: 'conclusion.nameType.ART',
  TABOO: 'conclusion.nameType.TABOO',
  POSTHUMOUS: 'conclusion.nameType.POSTHUMOUS',
}

export const lineageLabelKeyMap: Record<RelationshipLineageType, string> = {
  LEGAL_GUARDIAN: 'conclusion.LEGAL_GUARDIAN.label',
  ADOPTIVE: 'conclusion.ADOPTIVE.label',
  BIOLOGICAL: 'conclusion.BIOLOGICAL.label',
  FOSTER: 'conclusion.FOSTER.label',
  STEP: 'conclusion.STEP.label',
}

export const dateFieldKeyMap: Record<
  | Exclude<ConclusionTypeWithDate, 'PARENT1_LINEAGE' | 'PARENT2_LINEAGE' | FullAssociationConclusionType>
  | Exclude<RelationshipLineageType, 'BIOLOGICAL'> // PARENT1_LINEAGE and PARENT2_LINEAGE more specific types; BIOLOGICAL doesn't get a date
  | 'association', // association used for all asoociation types
  string
> = {
  association: 'conclusion.association.date.label',
  ADOPTIVE: 'conclusion.ADOPTIVE.date.label',
  FOSTER: 'conclusion.FOSTER.date.label',
  LEGAL_GUARDIAN: 'conclusion.LEGAL_GUARDIAN.date.label',
  STEP: 'conclusion.STEP.date.label',
  AFFILIATION: 'conclusion.AFFILIATION.date.label',
  ANNULMENT: 'conclusion.ANNULMENT.date.label',
  BAR_MITZVAH: 'conclusion.BAR_MITZVAH.date.label',
  BAS_MITZVAH: 'conclusion.BAS_MITZVAH.date.label',
  BIRTH: 'conclusion.BIRTH.date.label',
  BURIAL: 'conclusion.BURIAL.date.label',
  CHRISTENING: 'conclusion.CHRISTENING.date.label',
  COMMON_LAW_MARRIAGE: 'conclusion.COMMON_LAW_MARRIAGE.date.label',
  CREMATION: 'conclusion.CREMATION.date.label',
  DEATH: 'conclusion.DEATH.date.label',
  DIVORCE: 'conclusion.DIVORCE.date.label',
  IMMIGRATION: 'conclusion.IMMIGRATION.date.label',
  LIVED_TOGETHER: 'conclusion.LIVED_TOGETHER.date.label',
  MARRIAGE: 'conclusion.MARRIAGE.date.label',
  MILITARY_SERVICE: 'conclusion.MILITARY_SERVICE.date.label',
  NATURALIZATION: 'conclusion.NATURALIZATION.date.label',
  NOBILITY_TITLE: 'conclusion.NOBILITY_TITLE.date.label',
  OCCUPATION: 'conclusion.OCCUPATION.date.label',
  OTHER_EVENT: 'conclusion.OTHER_EVENT.date.label',
  RELIGIOUS_AFFILIATION: 'conclusion.RELIGIOUS_AFFILIATION.date.label',
  RESIDENCE: 'conclusion.RESIDENCE.date.label',
  STILLBORN: 'conclusion.STILLBORN.date.label',
}
export const placeFieldKeyMap: Record<
  Exclude<ConclusionTypeWithPlace, FullAssociationConclusionType> | 'association',
  string
> = {
  association: 'conclusion.association.place.label',
  AFFILIATION: 'conclusion.AFFILIATION.place.label',
  ANNULMENT: 'conclusion.ANNULMENT.place.label',
  BAR_MITZVAH: 'conclusion.BAR_MITZVAH.place.label',
  BAS_MITZVAH: 'conclusion.BAS_MITZVAH.place.label',
  BIRTH: 'conclusion.BIRTH.place.label',
  BURIAL: 'conclusion.BURIAL.place.label',
  CHRISTENING: 'conclusion.CHRISTENING.place.label',
  COMMON_LAW_MARRIAGE: 'conclusion.COMMON_LAW_MARRIAGE.place.label',
  CREMATION: 'conclusion.CREMATION.place.label',
  DEATH: 'conclusion.DEATH.place.label',
  DIVORCE: 'conclusion.DIVORCE.place.label',
  IMMIGRATION: 'conclusion.IMMIGRATION.place.label',
  LIVED_TOGETHER: 'conclusion.LIVED_TOGETHER.place.label',
  MARRIAGE: 'conclusion.MARRIAGE.place.label',
  MILITARY_SERVICE: 'conclusion.MILITARY_SERVICE.place.label',
  NATURALIZATION: 'conclusion.NATURALIZATION.place.label',
  NOBILITY_TITLE: 'conclusion.NOBILITY_TITLE.place.label',
  OCCUPATION: 'conclusion.OCCUPATION.place.label',
  OTHER_EVENT: 'conclusion.OTHER_EVENT.place.label',
  RELIGIOUS_AFFILIATION: 'conclusion.RELIGIOUS_AFFILIATION.place.label',
  RESIDENCE: 'conclusion.RESIDENCE.place.label',
  STILLBORN: 'conclusion.STILLBORN.place.label',
}
export const descriptionFieldKeyMap: Record<
  Exclude<ConclusionTypeWithDescription, FullAssociationConclusionType> | 'association',
  string
> = {
  association: 'conclusion.association.description.label',
  AFFILIATION: 'conclusion.AFFILIATION.description.label',
  CASTE_NAME: 'conclusion.CASTE_NAME.description.label',
  CLAN_NAME: 'conclusion.CLAN_NAME.description.label',
  IMMIGRATION: 'conclusion.IMMIGRATION.description.label',
  MILITARY_SERVICE: 'conclusion.MILITARY_SERVICE.description.label',
  NATIONAL_ID: 'conclusion.NATIONAL_ID.description.label',
  NATIONAL_ORIGIN: 'conclusion.NATIONAL_ORIGIN.description.label',
  NATURALIZATION: 'conclusion.NATURALIZATION.description.label',
  NOBILITY_TITLE: 'conclusion.NOBILITY_TITLE.description.label',
  OCCUPATION: 'conclusion.OCCUPATION.description.label',
  OTHER_EVENT: 'conclusion.OTHER_EVENT.description.label',
  OTHER_FACT: 'conclusion.OTHER_FACT.description.label',
  PHYSICAL_DESCRIPTION: 'conclusion.PHYSICAL_DESCRIPTION.description.label',
  RACE: 'conclusion.RACE.description.label',
  RELIGIOUS_AFFILIATION: 'conclusion.RELIGIOUS_AFFILIATION.description.label',
  RESIDENCE: 'conclusion.RESIDENCE.description.label',
  TRIBE_NAME: 'conclusion.TRIBE_NAME.description.label',
}

export function getPlaceFieldLabel(t: TFunction, conclusionType: ConclusionTypeWithPlace): string {
  let key: keyof typeof placeFieldKeyMap = conclusionType as keyof typeof placeFieldKeyMap
  if (ASSOCIATION_TYPES.includes(conclusionType as FullAssociationConclusionType)) {
    key = 'association'
  }
  return t(placeFieldKeyMap[key])
}

export function getDescriptionFieldLabel(t: TFunction, conclusionType: ConclusionTypeWithDescription): string {
  let key: keyof typeof descriptionFieldKeyMap = conclusionType as keyof typeof descriptionFieldKeyMap
  if (ASSOCIATION_TYPES.includes(conclusionType as FullAssociationConclusionType)) {
    key = 'association'
  }
  return t(descriptionFieldKeyMap[key])
}

export function getDateFieldLabel(
  t: TFunction,
  conclusionType: ConclusionTypeWithDate,
  lineageType: Exclude<RelationshipLineageType, 'BIOLOGICAL'> | undefined
): string {
  let key: keyof typeof dateFieldKeyMap = conclusionType as keyof typeof dateFieldKeyMap
  if ((conclusionType === 'PARENT1_LINEAGE' || conclusionType === 'PARENT2_LINEAGE') && lineageType) {
    key = lineageType
  }
  if (ASSOCIATION_TYPES.includes(conclusionType as (typeof ASSOCIATION_TYPES)[number])) {
    key = 'association'
  }
  return t(dateFieldKeyMap[key])
}

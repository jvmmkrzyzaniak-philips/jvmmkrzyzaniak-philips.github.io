import { i18n } from '@fs/zion-locale'

type Direction = 'ltr' | 'rtl'

const hasWindow = typeof window !== 'undefined'

// read the direction prop as the source of truth (in case of overrides)
// fallback to the direction computation from the locale if not present
export function textDirection(): Direction {
  return (hasWindow && document.querySelector('html')?.dir) || i18n.dir() || 'ltr'
}

type Params<Value> = Partial<Record<Direction, Value>>

export function atTextDirection<const P extends Params<P[keyof P]>>({ ltr, rtl }: P): P[keyof P] {
  return textDirection() === 'rtl' ? rtl : ltr
}

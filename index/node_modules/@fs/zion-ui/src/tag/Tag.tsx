import React from 'react'
import type { InferProps } from 'prop-types'
import PropTypes from 'prop-types'
import { css, cx } from '@linaria/core'
import { boolAttr, sanitizeProps } from '@fs/zion-frontend-friends'
import { boldCss, textAcss } from '../typography/typographyStyles'
import { colors } from '../theme'
import colorThemes from '../theme/themeSubsets'
import Ellipsis from '../ellipsis'

const tagCss = css`
  --icon-inline-text: 0;
  display: inline-flex;
  align-items: center;
  width: fit-content;
  max-width: 100%; // This is needed to allow the ellipsis to work in smaller spaces.
  font-weight: bold;
  border-radius: 4px;
  padding: 4px 6px;
  gap: 4px;
  background: ${colors.transparent.color03};
  color: ${colors.transparent.color90};
`

const propTypes = {
  /** Short piece of text to be displayed in the tag */
  text: PropTypes.string,

  /** String indicating the color of the tag and icon */
  color: PropTypes.oneOf(['blue', 'green', 'yellow', 'red', 'danger', 'purple', 'gray'] as const),

  /** Optional icon to use for the tag. Must be something imported from `@fs/zion-icon` */
  Icon: PropTypes.elementType,
}

/**
 * ### Tag serves as a small colored indicator of important information.
 *
 * It should not be used for text longer than a few words.
 */
export default function Tag({ text, color = 'blue', Icon, ...props }: InferProps<typeof propTypes>): JSX.Element {
  return (
    <span
      {...sanitizeProps(props)}
      className={cx(tagCss, textAcss, boldCss, colorThemes[color])}
      has-icon={boolAttr(Icon)}
    >
      {Icon && <Icon size="xs" />}
      <Ellipsis>{text}</Ellipsis>
    </span>
  )
}

Tag.propTypes = propTypes

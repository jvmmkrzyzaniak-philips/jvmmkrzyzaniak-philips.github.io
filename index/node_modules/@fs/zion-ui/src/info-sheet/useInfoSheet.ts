import { useCallback, useState, type RefObject } from 'react'
import { useOverlay } from '../overlay'
import type { UseOverlayReturnOptions } from '../overlay/useOverlay'

const percentageToPixel = (percentage: number): number => window.innerHeight * percentage
const limitHeight = (height: number): number => Math.min(window.innerHeight - 20, Math.max(48, height))

export type UseInfoSheetOptions = {
  /** The ref to focus back to when the InfoSheet closes */
  focusBackRef?: RefObject<HTMLElement>

  /** Whether or not the infosheet is initially open on first render
   * @default false
   */
  initiallyOpen?: boolean

  /** Whether or not the infosheet displays on the bottom on first render
   * @default false
   */
  initiallyBottomSheet?: boolean

  /** The starting height of the infosheet when it is a bottomSheet
   * @default 0.5
   */
  initialBottomSheetHeight?: number
}

export type UseInfoSheetReturnOptions = UseOverlayReturnOptions & {
  /** Whether or not the sheet is currently a bottom sheet. */
  isBottomSheet: boolean

  /** Setter to change the value of isBottomSheet. */
  setIsBottomSheet: (isBottomSheet: boolean) => void

  /** The pixel height of the InfoSheet when it is a bottomSheet */
  bottomSheetHeight: number

  /** Setter to change the value of bottomSheetHeight.
   * @param {number} percentage percentage of the screen height to adjust to
   */
  setBottomSheetHeight: (percentage: number) => void
}

export default function useInfoSheet({
  initiallyOpen = false,
  focusBackRef,
  initiallyBottomSheet = false,
  initialBottomSheetHeight = 0.5,
}: UseInfoSheetOptions = {}): UseInfoSheetReturnOptions {
  const overlay = useOverlay({ initiallyOpen, focusBackRef })
  const [isBottomSheet, setIsBottomSheet] = useState(initiallyBottomSheet)
  const [height, setHeight] = useState(limitHeight(percentageToPixel(initialBottomSheetHeight)))

  const setBottomSheetHeight = useCallback((newHeight) => {
    setHeight(limitHeight(percentageToPixel(newHeight)))
  }, [])

  return { ...overlay, isBottomSheet, setIsBottomSheet, bottomSheetHeight: height, setBottomSheetHeight }
}

/** *****************************************************************************
 *     FEATURE : ModalInfoSheet
 *  MAINTAINER : Frontier Core | Riley Brown
 * ==============================================================================
 *
 * ------------------------------------------------------------------------------
 * RESOURCES
 * - Designs: https://www.figma.com/design/ZcR2QhxCqVHzzdED7BqFuR/Header%2FFooter-Iterations?node-id=3150-35464&t=DMahqGxuzAq0WAHv-0
 * - Jira for original needs: HTAM24Q2-126
 * ------------------------------------------------------------------------------
 * CONTEXT AND CONSIDERATIONS
 * Different than the info sheet, this will be outside of the page flow and have a scrim.
 ***************************************************************************** */

import React, { useRef, useCallback, useState, type ReactElement } from 'react'
import { css } from '@linaria/core'
import Portal from '../portal'
import Scrim from '../scrim'
import { useBodyScrollLock, useClickAway, useEscHandler, useFocusLock } from '../quarks-authorized-use-only'
import { sideSheetSizes } from './InfoSheetProvider'
import { ParentInfoSheetProvider } from './ParentInfoSheetProvider'
import BaseInfoSheet, { type InfoSheetBaseProps } from './BaseInfoSheet'
import { type UseInfoSheetReturnOptions } from './useInfoSheet'

const stackingCss = css`
  position: fixed;
  top: 0;
  inset-inline-start: 0;
  z-index: 2; /* Create a stacking context, so all things inside this overlay will be contained (and on top of the main ui) */
  width: 100%;
  height: 100%;
  pointer-events: none;
  & > * {
    pointer-events: auto;
  }
`

type ModalInfoSheetProps = Omit<
  InfoSheetBaseProps,
  'elevated' | 'onBackClick' | 'nonClosable' | 'dockable' | 'togglePlacement'
> &
  UseInfoSheetReturnOptions

/** ### _A Modal panel, similar to DialogOverlay, that can be used to gather input from a user._
 *
 * Although similar to the look and feel of InfoSheet, this component behaves more like a modal
 * dialog. It interrupts the user's flow and provides a scrim to block the user's view.
 *
 * One must use `useInfoSheet` to consume an ModalInfoSheet. An affordance (Button, IconButton, ActionChip) should be used to show and hide the infosheet.
 */
export default function ModalInfoSheet({
  bottomSheetHeight,
  children,
  close,
  focusBackRef,
  isBottomSheet,
  isOpen,
  open, // eslint-disable-line @typescript-eslint/no-unused-vars -- Ignored
  setBottomSheetHeight,
  setIsBottomSheet, // eslint-disable-line @typescript-eslint/no-unused-vars -- Ignored
  size = 'md',
  targetRef,
  transitioning,
  ...props
}: ModalInfoSheetProps): ReactElement {
  const portalRef = useRef<HTMLDivElement>(null)
  const scrimRef = useRef<HTMLElement>(null)
  const overlayRef = useRef<HTMLDivElement>(null)

  // wait until the animation is done when closing so that our footer doesn't jump if body has scrollbar
  useBodyScrollLock(isOpen || transitioning, overlayRef)
  useFocusLock({ enabled: isOpen, containerRef: portalRef })

  useClickAway({
    enabled: isOpen,
    ref: scrimRef,
    handler: close,
    contentRef: overlayRef,
    focusBackRef,
    targetRef,
  })

  useEscHandler({
    handler: close,
    enabled: isOpen,
  })

  const [panelPortalDiv, setPanelPortalDiv] = useState<HTMLDivElement | undefined>(
    document ? document.createElement('div') : undefined
  )
  const panelPortalRef = useCallback(setPanelPortalDiv, [setPanelPortalDiv])
  const sheetSize = !isBottomSheet ? sideSheetSizes[size] : bottomSheetHeight

  return (
    <Portal ref={portalRef}>
      <ParentInfoSheetProvider
        bottomSheetHeight={bottomSheetHeight}
        close={close}
        isBottomSheet={isBottomSheet}
        isOpen={isOpen}
        nonClosable={false}
        panelPortalDiv={panelPortalDiv}
        setBottomSheetHeight={setBottomSheetHeight}
        sheetSize={sideSheetSizes[size]}
        togglingPlacement={false}
        transitioning={transitioning}
      >
        <Scrim ref={scrimRef} isOpen={isOpen} />
        <div className={stackingCss}>
          <BaseInfoSheet
            aria-modal
            elevated
            focusBackRef={focusBackRef}
            isBottomSheet={isBottomSheet}
            isOpen={isOpen}
            panelPortalRef={panelPortalRef}
            ref={overlayRef}
            role="dialog"
            sheetSize={sheetSize}
            targetRef={targetRef}
            transitioning={transitioning}
            {...props}
          >
            {children}
          </BaseInfoSheet>
        </div>
      </ParentInfoSheetProvider>
    </Portal>
  )
}

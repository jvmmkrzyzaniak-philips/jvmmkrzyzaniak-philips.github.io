import type { ReactNode } from 'react'
import React, { useContext, createContext, useMemo } from 'react'

const ParentInfoSheetContext = createContext<InfoSheetValues | null>(null)

type InfoSheetValues = {
  isBottomSheet: boolean
  sheetSize: number
  isOpen: boolean
  transitioning: boolean
  close: () => void
  togglingPlacement: boolean
  panelPortalDiv: Element
  nonClosable: boolean
  bottomSheetHeight: number
  setBottomSheetHeight: (arg: number) => void
}

export const useParentInfoSheet = (): InfoSheetValues => useContext(ParentInfoSheetContext)

export const ParentInfoSheetProvider = ({
  children,
  sheetSize = 0,
  ...values
}: InfoSheetValues & { children: ReactNode }): JSX.Element => {
  const value = useMemo(
    () => ({
      sheetSize,
      ...values,
    }),
    [sheetSize, values]
  )
  return <ParentInfoSheetContext.Provider value={value}>{children}</ParentInfoSheetContext.Provider>
}

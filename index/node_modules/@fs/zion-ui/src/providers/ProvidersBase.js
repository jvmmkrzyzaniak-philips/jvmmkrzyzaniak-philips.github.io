import React from 'react'
import ErrorBoundary from '@fs/zion-error-boundary'
import { useReducedMotion } from '@react-spring/web'
import { StatusOverlayProvider } from '../status-overlay'
import { ProgressOverlayProvider } from '../progress-overlay'
import { PageWidthProvider, ResponsiveProvider } from '../responsive'
import { FocusManagerProvider } from '../use-focus-manager'
import { ClickAwayProvider } from '../use-click-away'
import { KeyboardShortcutsProvider } from '../use-keyboard-shortcuts'
import { PortalContext, PopperPortalContext } from '../portal'
import { DraggingCursorProvider } from '../draggable-container/useDraggable'
import globalStyles from '../global-styles/globalStyles'
import { SupplementalOverlayProvider } from '../supplemental-overlay'

export default function Providers({
  children,
  overlaysDiv,
  supplementalOverlayDiv,
  statusOverlayDiv,
  viewportVariables,
}) {
  // Remove all spring animations when the user has set their OS to reduce motion.
  // This is a global setting mostly used by users with vestibular disorders.
  // It is expected that websites that provide animations will respect it by removing
  // all unnecessary animations. This is a requirement for WCAG 2.1 compliance. See:
  // https://www.w3.org/WAI/WCAG21/Understanding/animation-from-interactions.html
  //
  // An example of something that is NOT necessary to remove is a video playing or content
  // appearing on a page. These are user-initiated actions and the user is left in control.
  useReducedMotion()

  return (
    <ErrorBoundary>
      <FocusManagerProvider>
        <ClickAwayProvider>
          <KeyboardShortcutsProvider>
            <DraggingCursorProvider>
              <ResponsiveProvider className={globalStyles} style={viewportVariables}>
                <PageWidthProvider>
                  <PortalContext.Provider value={overlaysDiv}>
                    <PopperPortalContext.Provider value={overlaysDiv}>
                      <SupplementalOverlayProvider portalDiv={supplementalOverlayDiv}>
                        <ProgressOverlayProvider portalDiv={statusOverlayDiv}>
                          <StatusOverlayProvider portalDiv={statusOverlayDiv}>{children}</StatusOverlayProvider>
                        </ProgressOverlayProvider>
                      </SupplementalOverlayProvider>
                    </PopperPortalContext.Provider>
                  </PortalContext.Provider>
                </PageWidthProvider>
              </ResponsiveProvider>
            </DraggingCursorProvider>
          </KeyboardShortcutsProvider>
        </ClickAwayProvider>
      </FocusManagerProvider>
    </ErrorBoundary>
  )
}

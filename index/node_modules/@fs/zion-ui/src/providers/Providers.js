import React from 'react'
import PropTypes from 'prop-types'
import { Observable } from '@fs/zion-frontend-friends'
import { css } from '@linaria/core'
import { HelpTutorialProvider } from '@fs/zion-help-tutorial'
import { RoleIndicatorProvider } from '@fs/zion-role-indicator'
import { HelpOverlayProvider } from '@fs/zion-help-overlay'
import { TodoOverlayProvider } from '@fs/zion-todo-overlay'
import { ChatProvider } from '@fs/zion-chat'
import { ResponsiveProvider } from '../responsive'
import { usePortalRef } from '../portal'
import { InfoSheetProvider } from '../info-sheet/InfoSheetProvider'
import { GridStart } from '../grid'
import ProvidersBase from './ProvidersBase'
import useViewportVariables from './useViewportVariables'

export const portalsCss = css`
  position: absolute;
  top: 0;
  inset-inline-start: 0;
  height: var(--layout-viewport-height);
  width: 100%;
  pointer-events: none;
  & > * {
    pointer-events: auto;
  }
`

export const fullHeightCss = css`
  display: flex;
  flex-direction: column;
  flex-grow: 1;
`

export default function Providers({ children }) {
  const [overlayRef, overlayDiv] = usePortalRef()
  const [supplementalRef, supplementalDiv] = usePortalRef()
  const [statusRef, statusDiv] = usePortalRef()
  const viewportVariables = useViewportVariables()

  return (
    <ProvidersBase
      overlaysDiv={overlayDiv}
      supplementalOverlayDiv={supplementalDiv}
      statusOverlayDiv={statusDiv}
      viewportVariables={viewportVariables}
    >
      <HelpTutorialProvider>
        <RoleIndicatorProvider>
          <HelpOverlayProvider>
            <TodoOverlayProvider>
              <ChatProvider>
                {/* The providers below control app height and need the fullHeightCss if they are not already a flex container */}
                <Observable rootMargin="100%" style={{ position: 'relative', zIndex: 0 }} className={fullHeightCss}>
                  <InfoSheetProvider>
                    <ResponsiveProvider className={fullHeightCss}>
                      <GridStart className={fullHeightCss}>{children}</GridStart>
                    </ResponsiveProvider>
                  </InfoSheetProvider>
                </Observable>
                <div className={portalsCss}>
                  <div portal="overlays" ref={overlayRef} />
                  <div portal="supplemental-overlay" ref={supplementalRef} />
                  <div portal="status-overlays" ref={statusRef} />
                </div>
              </ChatProvider>
            </TodoOverlayProvider>
          </HelpOverlayProvider>
        </RoleIndicatorProvider>
      </HelpTutorialProvider>
    </ProvidersBase>
  )
}

Providers.propTypes = {
  /** Children should include any elements that directly or indirectly use zion-ui components. */
  children: PropTypes.node.isRequired,

  // TODO: Attach activeTheme to user preference, when the preference is added
  /** Selected theme from the themes object in zion-ui */
  activeTheme: PropTypes.shape({
    name: PropTypes.string,
    styles: PropTypes.string,
  }),
}

import React from 'react'
import PropTypes from 'prop-types'
import { css } from '@linaria/core'
import { boolAttr, sanitizeProps } from '@fs/zion-frontend-friends'
import { Paragraph } from '../typography'
import { GroupValidation, feedbackColorMap, getStatus } from '../input-group/InputGroup'
import FeedbackText from '../feedback-text'
import Row from '../row'

const containerCss = css`
  margin-bottom: 24px;

  [data-dense]& {
    margin-bottom: 0;
  }
`

const fieldsetCss = css`
  border: none;
  padding-block-start: 0;
  padding-block-end: 0;
  padding-inline-start: 0;
  padding-inline-end: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
  min-inline-size: 0;
`

const labelCss = css`
  padding-inline-start: 0;
  padding-inline-end: 0;
`

export default function RadioGroup({
  label,
  largerLabel = false,
  orientation = 'vertical',
  disabled = false,
  dense = false,
  children,
  errorMessage,
  helpMessage,
  validMessage,
  warningMessage,
  ...props
}) {
  const status = getStatus({ errorMessage, validMessage, warningMessage })
  const validationProps = { errorMessage, helpMessage, validMessage, warningMessage }
  return (
    <div {...sanitizeProps(props)} className={containerCss} data-dense={boolAttr(dense)}>
      <fieldset className={fieldsetCss} disabled={disabled} aria-invalid={errorMessage ? 'true' : undefined}>
        {label && (
          <legend>
            <div className={labelCss}>
              <FeedbackText type={feedbackColorMap[status]}>
                <Paragraph size={largerLabel ? 'sm' : 'xs'} as="div">
                  {label}
                </Paragraph>
              </FeedbackText>
            </div>
          </legend>
        )}
        {orientation === 'horizontal' ? (
          <Row guttersY="none" wrap>
            {children}
          </Row>
        ) : (
          <div>{children}</div>
        )}
        <GroupValidation {...validationProps} />
      </fieldset>
    </div>
  )
}

RadioGroup.propTypes = {
  /** Label text for the group of inputs.  JSX is allowed, but please don't use for anything except links. */
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),

  /** Increases label size when set to true */
  largerLabel: PropTypes.bool,

  /** Determines the direction the inputs are layed out. */
  orientation: PropTypes.oneOf(['horizontal', 'vertical']),

  /** Disables the entire radio group if true. */
  disabled: PropTypes.bool,

  /** Use this property to remove the built-in spacing when needed. */
  dense: PropTypes.bool,

  /** Valid message text. */
  validMessage: PropTypes.string,

  /** Error message text. */
  errorMessage: PropTypes.node,

  /** Help message text. */
  helpMessage: PropTypes.node,

  /** Function that runs to check if a warning should be displayed. Must return a string or null. */
  warningValidate: PropTypes.func,
}

import React from 'react'
import PropTypes from 'prop-types'
import { NoticeImportant } from '@fs/zion-icon'
import { css } from '@linaria/core'
import { useTranslation } from 'react-i18next'
import { sanitizeProps } from '@fs/zion-frontend-friends'
import DataBlock from '../data-block'
import { ActionChip } from '../chip'
import FeedbackText from '../feedback-text'
import Ellipsis from '../ellipsis'

const factCss = css`
  margin-top: 4px;
`

const datePlaceCss = css`
  display: flex; /* this removes the extra few pixels that block divs have for some odd reason */
`

export default function FactBlock({ as: TagName, heading, date = {}, place = {}, chipOnClick, dataProps, ...props }) {
  const [t] = useTranslation()

  let nonStandardizedLabel
  if (!date.standardized && !place.standardized) {
    nonStandardizedLabel = t('nonstandardized.dateandplace', 'Non-standardized Date and Place')
  } else if (!date.standardized) {
    nonStandardizedLabel = t('nonstandardized.date', 'Non-standardized Date')
  } else if (!place.standardized) {
    nonStandardizedLabel = t('nonstandardized.place', 'Non-standardized Place')
  }

  return (
    <div {...sanitizeProps(props)}>
      <DataBlock
        heading={heading}
        as={TagName}
        dataProps={dataProps}
        data={
          <>
            {date.date && (
              <span className={datePlaceCss} title={date.title}>
                <Ellipsis>{date.date}</Ellipsis>
              </span>
            )}
            {place.place && (
              <span className={datePlaceCss} title={place.title}>
                <Ellipsis>{place.place}</Ellipsis>
              </span>
            )}
          </>
        }
      />
      {(!date.standardized || !place.standardized) && (
        <div className={factCss}>
          <FeedbackText type="error">
            <ActionChip onClick={chipOnClick} label={nonStandardizedLabel} Icon={NoticeImportant} />
          </FeedbackText>
        </div>
      )}
    </div>
  )
}

const datePlacePropTypes = {
  /** The title to be applied to the date/place for accessibility. */
  title: PropTypes.string,

  /** Whether the date/place is standardized. */
  standardized: PropTypes.bool,
}

FactBlock.propTypes = {
  /** The title to display for the fact (e.g. Birth). */
  heading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,

  /** HTML tag name for fact container. */
  as: PropTypes.string,

  /** Custom props passed to the data. Same prop as shown on DataBlock. */
  dataProps: PropTypes.object,

  /** Date Object */
  date: PropTypes.shape({
    /** The date to display. */
    date: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,

    ...datePlacePropTypes,
  }),

  /** Place Object */
  place: PropTypes.shape({
    /** The place to display. */
    place: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,

    ...datePlacePropTypes,
  }),

  /** Handler applied to the chip displayed when either the date or place is non-standardized. */
  chipOnClick: PropTypes.func,
}

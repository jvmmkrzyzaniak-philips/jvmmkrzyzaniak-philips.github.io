import type { ReactNode } from 'react'
import React, { createContext } from 'react'
import type { Breakpoint, BreakpointName } from '../responsive/breakpoints'
import breakpoints from '../responsive/breakpoints'

const getBreakpoint = (width: number): Breakpoint => {
  let result: Breakpoint = {
    name: 'default',
    width: 0,
  }
  breakpoints.some((breakpoint) => {
    if (breakpoint.width <= width) {
      result = breakpoint
      return false
    }
    return true
  })
  return result
}

export const CellSizeContext = createContext<BreakpointName>('default')
export const CellWidthContext = createContext(0)

const ResponsiveCellProvider = ({ width = 0, children }: { width: number; children: ReactNode }): JSX.Element => {
  const breakpoint = getBreakpoint(width)
  return (
    <CellSizeContext.Provider value={breakpoint.name}>
      <CellWidthContext.Provider value={width}>{children}</CellWidthContext.Provider>
    </CellSizeContext.Provider>
  )
}

export default ResponsiveCellProvider

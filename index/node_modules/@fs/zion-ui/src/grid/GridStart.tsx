/**
 * The Grid acts as a layout manager with 12 columns available for children to stored in. Each child Cell can chose
 * the number of columns they want to use from the 12 available. The Grid is responsible for defining the size of
 * the gutters between the child elements. The responsive provider is the key to determining which elements get
 * displayed at which size of the container Grid is defined in.
 */
import type { ElementType } from 'react'
import React, { forwardRef } from 'react'
import type { PolymorphicRef } from '../polymorphic-prop-types'
import { useWidth } from '../responsive'
import GridContext from './GridContext'

const GridStart = forwardRef(
  <C extends ElementType = 'div'>({ children, as, style = {}, ...props }, ref: PolymorphicRef<C>) => {
    const TagName = as || 'div'
    const width = useWidth()

    return (
      <GridContext.Provider value={12}>
        <TagName
          {...props}
          ref={ref}
          style={{
            ...style,
            '--grid-width': `${width}px`,
            '--cell-width': `${width}px`,
          }}
        >
          {children}
        </TagName>
      </GridContext.Provider>
    )
  }
)

export default GridStart

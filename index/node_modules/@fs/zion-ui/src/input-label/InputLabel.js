import React, { forwardRef } from 'react'

import { css, cx } from '@linaria/core'
import PropTypes from 'prop-types'
import { boolAttr, sanitizeProps } from '@fs/zion-frontend-friends'
import { paragraphBaseCss, textAcss, textBaseCss, textBcss } from '../typography/typographyStyles'
import { colors } from '../theme'
import Ellipsis from '../ellipsis'

export const labelCss = css`
  color: var(--special-type-color, ${colors.gray100});
  cursor: inherit;
  padding-bottom: 4px;

  [aria-disabled='true']& {
    color: ${colors.transparent.gray40};
    cursor: not-allowed;
  }
`

const LabelCore = forwardRef(
  (
    {
      children,
      className,
      centered,
      secondary,
      nextToInput,
      largerLabel = false,
      isSpacer,
      labelAs = 'label',
      ...props
    },
    ref
  ) => {
    const TagName = isSpacer ? 'span' : labelAs

    return (
      <TagName
        {...props}
        className={cx(className, textBaseCss, paragraphBaseCss, nextToInput || largerLabel ? textBcss : textAcss)}
        ref={ref}
        data-centered={boolAttr(centered)}
        data-secondary={boolAttr(secondary)}
      >
        {children}
      </TagName>
    )
  }
)

/** Label applied to input elements on forms */
const InputLabel = ({
  disabled,
  as: TagName = LabelCore,
  ellipses = true,
  largerLabel = false,
  description,
  ...props
}) => {
  const commonProps = {
    ...sanitizeProps(props),
    // using aria-disabled so that WAVE and other tools don't have a
    // false positive for "WCAG 2.1 AA, SC 1.4.3: Incidental" rule.
    // see: https://www.w3.org/TR/WCAG21/#contrast-minimum
    'aria-disabled': Boolean(disabled).toString(),
    className: labelCss,
    largerLabel,
  }

  return ellipses ? (
    <Ellipsis as={TagName} {...commonProps} data-full-width="" description={description} />
  ) : (
    <TagName {...commonProps} />
  )
}

export default InputLabel

InputLabel.propTypes = {
  /** Define a custom tag-name to use (or component) */
  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),

  /** Unique ID that identifies the input this label is for */
  htmlFor: PropTypes.string,

  /** Applies disabled styling if true */
  disabled: PropTypes.bool,

  /** Set to false to turn off ellipses for certain components (like Checkbox) */
  ellipses: PropTypes.bool,

  /** Increases label size when set to true */
  largerLabel: PropTypes.bool,

  /** Optional additional text to be rendered in a ToolTip for the label. */
  description: PropTypes.string,
}

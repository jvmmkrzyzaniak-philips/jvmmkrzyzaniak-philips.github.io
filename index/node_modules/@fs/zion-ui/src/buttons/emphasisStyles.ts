import { css, cx } from '@linaria/core'
import { colors } from '../theme'
import { elevationBaseCss } from '../elevation'

const baseCss = css`
  --button-outline-color: var(--button-text-color);
  border: 1px solid transparent;
  transition: background-color 0.3s;

  &:focus-visible {
    outline: 3px solid var(--button-outline-color);
    outline-offset: -1px;
  }

  &:active:not([aria-disabled='true']) {
    outline: none;
  }

  &[aria-disabled='true'] {
    --button-text-color: ${colors.transparent.gray40};
    --button-background: transparent;
    --button-hover-background: transparent;
    --button-active-background: transparent;
  }
`

const mediumEmphasisBaseCss = css`
  border-color: var(--button-text-color);
  &:focus-visible {
    /* rely on the outline to give us our border
       otherwise, the transparent border and outline
       stack and it looks bad */
    border-color: transparent;
  }
`

const highEmphasisBaseCss = css`
  --button-outline-color: ${colors.color30};
  &[aria-disabled='true'] {
    --button-text-color: ${colors.transparent.gray40};
    --button-background: ${colors.transparent.gray05};
    --button-hover-background: ${colors.transparent.gray05};
    --button-active-background: ${colors.transparent.gray05};
    --button-outline-color: ${colors.gray30};

    &[data-white] {
      --button-text-color: ${colors.gray40};
      --button-background: ${colors.gray02};
      --button-hover-background: ${colors.gray40};
      --button-active-background: ${colors.gray02};
    }
  }
`

const squishyButtonCss = css`
  --button-scale: 1.06;
  --elev-shadow: var(--elev-shadow-1);
  --elev-veil: var(--elev-veil-1);

  will-change: transform;
  // Needs to be !important to override transition properties from elevation and other button stuff
  transition:
    background-color 0.3s,
    box-shadow 0.15s,
    transform 0.15s !important;
  transform: scale(1);

  &:hover,
  &:focus,
  &:focus-visible {
    transform: scale(var(--button-scale));
    --elev-shadow: var(--elev-shadow-4);
    --elev-veil: var(--elev-veil-4);
  }

  &[aria-disabled='true'],
  &:active {
    transform: scale(1);
    --elev-shadow: var(--elev-shadow-1);
    --elev-veil: var(--elev-veil-1);
  }

  @media (prefers-reduced-motion: reduce) {
    transition:
      background-color 0s,
      box-shadow 0s,
      transform 0s !important;
  }
`

export const lowEmphasisCss = baseCss
export const mediumEmphasisCss = cx(baseCss, mediumEmphasisBaseCss, squishyButtonCss)
export const highEmphasisCss = cx(baseCss, highEmphasisBaseCss, squishyButtonCss, elevationBaseCss)

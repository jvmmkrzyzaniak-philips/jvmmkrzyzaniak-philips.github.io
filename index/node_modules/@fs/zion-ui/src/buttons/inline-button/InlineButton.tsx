import React, { forwardRef } from 'react'
import { css, cx } from '@linaria/core'

import { sanitizeProps } from '@fs/zion-frontend-friends'
import { textAcss } from '../../typography/typographyStyles'

import TextAndIconButton from '../TextAndIconButton'
import { lowEmphasisCss } from '../emphasisStyles'
import type { TextButtonProps, IconProps } from '../types'
import { colorCss, lowCss } from '../colorStyles'

type InlineButtonProps = {
  /** Only text allowed for the children */
  children: string | string[]

  /**
   * The icon to use for the button.
   *
   * **DO NOT USE** inline with text (like in a Paragraph). It looks weird.
   */
  Icon?: IconProps['Icon']

  /** Whether the icon is at the beginning or end of the button */
  iconAtEnd?: boolean
} & Omit<TextButtonProps, 'children' | 'text'> &
  Omit<IconProps, 'Icon'>

const inlineButtonCss = css`
  border-radius: 4px;
  padding: 7px 4px;
  height: 28px;
  margin: -9px -4px;
  max-width: calc(100% + 16px);
  text-transform: uppercase;
  // Important to not become overridden by TextAndIconButton icon styles
  --icon-outside-margin: -1px !important;
  --icon-inside-margin: 2px !important;
`

export const InlineButton = forwardRef(({ children, ...props }: InlineButtonProps, ref) => {
  return (
    <TextAndIconButton
      {...sanitizeProps(props)}
      className={cx(inlineButtonCss, lowEmphasisCss, colorCss, lowCss, textAcss)}
      ref={ref}
      iconSize="xs"
    >
      {children}
    </TextAndIconButton>
  )
})

export default InlineButton

import React, { forwardRef } from 'react'
import { css, cx } from '@linaria/core'
import PropTypes from 'prop-types'

export const elevationBaseCss = css`
  --elev-shadow-0: none;
  --elev-shadow-1: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),
    0px 2px 1px -1px rgba(0, 0, 0, 0.12);
  --elev-shadow-2: 0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),
    0px 3px 1px -2px rgba(0, 0, 0, 0.12);
  --elev-shadow-4: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),
    0px 1px 10px 0px rgba(0, 0, 0, 0.12);
  --elev-shadow-6: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14),
    0px 1px 18px 0px rgba(0, 0, 0, 0.12);
  --elev-shadow-8: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14),
    0px 3px 14px 2px rgba(0, 0, 0, 0.12);
  --elev-shadow-12: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14),
    0px 5px 22px 4px rgba(0, 0, 0, 0.12);
  --elev-shadow-16: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14),
    0px 6px 30px 5px rgba(0, 0, 0, 0.12);
  --elev-shadow-24: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14),
    0px 9px 46px 8px rgba(0, 0, 0, 0.12);

  --elev-veil-0: 0;
  --elev-veil-1: 0.05;
  --elev-veil-2: 0.07;
  --elev-veil-4: 0.09;
  --elev-veil-6: 0.11;
  --elev-veil-8: 0.12;
  --elev-veil-12: 0.14;
  --elev-veil-16: 0.15;
  --elev-veil-24: 0.16;

  --elev-shadow: var(--elev-shadow-0);
  --elev-veil: var(--elev-veil-0);

  box-shadow: var(--elev-shadow);
  position: relative;
  transition: box-shadow 0.1s;

  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    top: 0;
    inset-inline-end: 0;
    background: var(--elev-veil-color);
    pointer-events: none;
    opacity: var(--elev-veil);
    transition: opacity 0.3s;
    z-index: 1; // TODO: Fix the Overlays so that this isn't needed. Right now it covers everything and washes some stuff out.
  }
`

export const e0 = css`
  --elev-shadow: var(--elev-shadow-0);
  --elev-veil: var(--elev-veil-0);
`
export const e1 = css`
  --elev-shadow: var(--elev-shadow-1);
  --elev-veil: var(--elev-veil-1);
`
export const e2 = css`
  --elev-shadow: var(--elev-shadow-2);
  --elev-veil: var(--elev-veil-2);
`
export const e4 = css`
  --elev-shadow: var(--elev-shadow-4);
  --elev-veil: var(--elev-veil-4);
`
export const e6 = css`
  --elev-shadow: var(--elev-shadow-6);
  --elev-veil: var(--elev-veil-6);
`
export const e8 = css`
  --elev-shadow: var(--elev-shadow-8);
  --elev-veil: var(--elev-veil-8);
`
export const e12 = css`
  --elev-shadow: var(--elev-shadow-12);
  --elev-veil: var(--elev-veil-12);
`
export const e16 = css`
  --elev-shadow: var(--elev-shadow-16);
  --elev-veil: var(--elev-veil-16);
`
export const e24 = css`
  --elev-shadow: var(--elev-shadow-24);
  --elev-veil: var(--elev-veil-24);
`

export const elevations = { 0: e0, 1: e1, 2: e2, 4: e4, 6: e6, 8: e8, 12: e12, 16: e16, 24: e24 }

export const h0 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-0);
    --elev-veil: var(--elev-veil-0);
  }
`
export const h1 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-1);
    --elev-veil: var(--elev-veil-1);
  }
`
export const h2 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-2);
    --elev-veil: var(--elev-veil-2);
  }
`
export const h4 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-4);
    --elev-veil: var(--elev-veil-4);
  }
`
export const h6 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-6);
    --elev-veil: var(--elev-veil-6);
  }
`
export const h8 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-8);
    --elev-veil: var(--elev-veil-8);
  }
`
export const h12 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-12);
    --elev-veil: var(--elev-veil-12);
  }
`
export const h16 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-16);
    --elev-veil: var(--elev-veil-16);
  }
`
export const h24 = css`
  &:hover {
    --elev-shadow: var(--elev-shadow-24);
    --elev-veil: var(--elev-veil-24);
  }
`

export const hoverElevations = { 0: h0, 1: h1, 2: h2, 4: h4, 6: h6, 8: h8, 12: h12, 16: h16, 24: h24 }

export const a0 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-0);
    --elev-veil: var(--elev-veil-0);
  }
`
export const a1 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-1);
    --elev-veil: var(--elev-veil-1);
  }
`
export const a2 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-2);
    --elev-veil: var(--elev-veil-2);
  }
`
export const a4 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-4);
    --elev-veil: var(--elev-veil-4);
  }
`
export const a6 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-6);
    --elev-veil: var(--elev-veil-6);
  }
`
export const a8 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-8);
    --elev-veil: var(--elev-veil-8);
  }
`
export const a12 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-12);
    --elev-veil: var(--elev-veil-12);
  }
`
export const a16 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-16);
    --elev-veil: var(--elev-veil-16);
  }
`
export const a24 = css`
  &:active {
    --elev-shadow: var(--elev-shadow-24);
    --elev-veil: var(--elev-veil-24);
  }
`

export const activeElevations = { 0: a0, 1: a1, 2: a2, 4: a4, 6: a6, 8: a8, 12: a12, 16: a16, 24: a24 }

export const f0 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-0);
    --elev-veil: var(--elev-veil-0);
  }
`
export const f1 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-1);
    --elev-veil: var(--elev-veil-1);
  }
`
export const f2 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-2);
    --elev-veil: var(--elev-veil-2);
  }
`
export const f4 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-4);
    --elev-veil: var(--elev-veil-4);
  }
`
export const f6 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-6);
    --elev-veil: var(--elev-veil-6);
  }
`
export const f8 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-8);
    --elev-veil: var(--elev-veil-8);
  }
`
export const f12 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-12);
    --elev-veil: var(--elev-veil-12);
  }
`
export const f16 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-16);
    --elev-veil: var(--elev-veil-16);
  }
`
export const f24 = css`
  &:focus {
    --elev-shadow: var(--elev-shadow-24);
    --elev-veil: var(--elev-veil-24);
  }
`

export const focusElevations = { 0: f0, 1: f1, 2: f2, 4: f4, 6: f6, 8: f8, 12: f12, 16: f16, 24: f24 }

const Elevation = forwardRef(({ as: TagName = 'div', z, hoverZ, focusZ, className, ...props }, ref) => (
  <TagName
    {...props}
    className={cx(className, elevationBaseCss, elevations[z], hoverElevations[hoverZ], focusElevations[focusZ])}
    ref={ref}
  />
))

Elevation.propTypes = {
  /** Define a custom tag-name to use (or component) */
  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),

  /** The elevation height */
  z: PropTypes.oneOf([0, 1, 2, 4, 6, 8, 12, 16, 24]).isRequired,

  /** The elevation height, when hovered */
  hoverZ: PropTypes.oneOf([0, 1, 2, 4, 6, 8, 12, 16, 24]),

  /** The elevation height, when focused */
  focusZ: PropTypes.oneOf([0, 1, 2, 4, 6, 8, 12, 16, 24]),
}

export default Elevation

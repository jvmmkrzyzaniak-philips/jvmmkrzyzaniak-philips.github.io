import { css } from '@linaria/core'
import { fonts, colors } from '../theme'
import { ellipsisCss } from '../ellipsis/Ellipsis'

export const baseTextRules = `
  --text-base-size: 1rem;
  --text-scale-factor: 1.2;

  @media screen and (min-width: 50em) {
    --text-scale-factor: 1.25;
  }

  @media screen and (min-width: 70em) {
    --text-scale-factor: 1.3;
  }

  --text-size-a: calc(var(--text-base-size) / var(--text-scale-factor));
  --text-size-b: var(--text-base-size);
  --text-size-c: calc(var(--text-size-b) * var(--text-scale-factor));
  --text-size-d: calc(var(--text-size-c) * var(--text-scale-factor));
  --text-size-e: calc(var(--text-size-d) * var(--text-scale-factor));
  --text-size-f: calc(var(--text-size-e) * var(--text-scale-factor));
  --text-size-g: calc(var(--text-size-f) * var(--text-scale-factor));
  --text-size-h: calc(var(--text-size-g) * var(--text-scale-factor));
`

export const textAcss = css`
  font-size: var(--text-size-a);
`

export const textBcss = css`
  font-size: var(--text-size-b);
`

export const textCcss = css`
  font-size: var(--text-size-c);
`

export const textDcss = css`
  font-size: var(--text-size-d);
`

export const textEcss = css`
  font-size: var(--text-size-e);
`

export const textFcss = css`
  font-size: var(--text-size-f);
`

export const textGcss = css`
  font-size: var(--text-size-g);
`

export const textHcss = css`
  font-size: var(--text-size-h);
`

export const textBaseCss = css`
  --icon-inline-text: -0.2; /* Help icons align with text properly */
  display: block;
  margin: 0;
  word-break: break-word;
  line-height: 1.3;
  color: var(--special-type-color, ${colors.gray100});

  width: 100%;
  min-width: 0; /* Requires min-width of 0 so Ellipsis will work */
  max-width: 80ch;
  &[data-full-width] {
    max-width: 100%;
  }

  &[data-secondary] {
    color: var(--special-type-secondary-color, ${colors.transparent.gray80});
  }

  &[data-centered] {
    text-align: center;
    /*
    * doing the standard "margin: 0 auto;" won't work because it will interfere with other 
    * classes that are employing margin-top and margin-bottom
    */
    margin-inline-start: auto;
    margin-inline-end: auto;
  }

  &[data-balanced] {
    text-wrap: balance;
  }
`

export const displayBaseCss = css`
  font-family: ${fonts.headings};
  font-weight: 500;
  max-width: 65ch;
  line-height: 1.08;
  margin-inline-start: -0.05em; /* Museo is too far to the right */
`

export const headingBaseCss = css`
  font-family: ${fonts.body};
  max-width: 70ch;
  line-height: 1.2;
  padding-bottom: 1px;

  // When the line-height is 1.2, ellipsis clips descenders in places like
  // DialogOverlay where we have ellipsis being used inside of a heading
  ${`.${ellipsisCss}`}:not(button, a) {
    padding-bottom: 1px; // Keeps descenders from being clipped because of the overflow
  }
`

export const boldCss = css`
  font-weight: 600;
`

export const subheadingBaseCss = css`
  font-weight: 400;
  font-family: ${fonts.body};
  margin-top: 0.2em;

  /* H1-H2 need tighter margins on the subheadings */
  .${displayBaseCss} &,
  .${displayBaseCss} + & {
    margin-top: -0.22em;
  }

  /* But H3 needs things to be just a little tighter. */
  .${displayBaseCss} &.${textCcss}, .${displayBaseCss} + &.${textCcss} {
    margin-top: -0.1em;
  }
`

export const overlineBaseCss = css`
  font-family: ${fonts.body};
  font-weight: normal;
  max-width: 80ch;

  .${displayBaseCss} & {
    margin-bottom: 0.1em;
    margin-inline-start: 0.05em; /* To override museo being too far right */

    [lang='zh'] & {
      margin-bottom: 0.37em;
    }
  }

  [data-centered] & {
    margin-inline-start: auto;
    margin-inline-end: auto;
  }
`

export const paragraphBaseCss = css`
  font-family: ${fonts.body};
  line-height: 1.5;

  &[data-dense] {
    line-height: 1.3;
  }

  & + & {
    margin-top: 0.9em;
    &[data-dense] {
      margin-top: 0.5em;
    }
  }
`

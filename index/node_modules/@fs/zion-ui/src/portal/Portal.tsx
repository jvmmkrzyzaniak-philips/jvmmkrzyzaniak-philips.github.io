import type { Context, ReactNode, RefObject } from 'react'
import React, { createContext, forwardRef, useCallback, useContext, useEffect, useMemo, useState } from 'react'
import { createPortal } from 'react-dom'
import { Theme } from '../theme'

export const PortalContext = createContext<HTMLElement>(document.body)

export const PopperPortalContext = createContext<HTMLElement>(document.body)

export const usePortalDivs = (count = 1, parentRef: RefObject<HTMLDivElement>): HTMLDivElement[] => {
  const [parentDiv, setParentDiv] = useState(() => document.createElement('div'))

  useEffect(() => {
    parentRef.current && setParentDiv(parentRef.current)
  }, [parentRef])

  const portalDivs = useMemo(() => Array.from(Array(count)).map(() => document.createElement('div')), [count])

  useEffect(() => {
    portalDivs.forEach((div) => parentDiv?.appendChild(div))
    return () => portalDivs.forEach((div) => parentDiv?.removeChild(div))
  }, [parentDiv, portalDivs])

  return portalDivs
}

export const usePortalRef = (): [(node: HTMLElement) => void, HTMLElement] => {
  const [portalDiv, setPortalDiv] = useState<HTMLElement>(document.createElement('div'))

  const portalRef = useCallback((node: HTMLElement) => {
    setPortalDiv(node || document.createElement('div'))
  }, [])

  return [portalRef, portalDiv]
}

type PortalProps = {
  context?: Context<HTMLElement>
  children: ReactNode
}

const Portal = forwardRef<HTMLDivElement, PortalProps>(
  ({ children, context = PortalContext, ...props }, ref): JSX.Element => {
    const portalDiv = useContext(context)
    const [childPortalRef, childPortalDiv] = usePortalRef()
    return createPortal(
      <Theme {...props} theme="current" ref={ref}>
        <PortalContext.Provider value={childPortalDiv}>
          <PopperPortalContext.Provider value={childPortalDiv}>
            {children}
            <div ref={childPortalRef} data-portal="children-overlays" />
          </PopperPortalContext.Provider>
        </PortalContext.Provider>
      </Theme>,
      portalDiv
    )
  }
)
export default Portal

import { css } from '@linaria/core'
import { colors } from '../theme'

export const colorCss = css`
  color: var(--chip-color);
  background: var(--chip-background);
  transition:
    background 0.3s,
    color 0.3s;

  &:visited {
    /* Keeps the text color the expected color when the chip is a visited link */
    color: var(--chip-color);
  }

  &:hover:not([aria-disabled='true']):not(:active) {
    background: var(--chip-focus-background);
  }

  &:focus {
    background: var(--chip-focus-background);
  }
  // Must be a separate selector from above or safari wont work
  &:focus-visible {
    background: var(--chip-focus-background);
    outline: 3px solid ${colors.color90};
    outline-offset: 0;
    &[data-white] {
      outline: 3px solid ${colors.gray90};
    }
  }

  &:focus:not(:focus-visible) {
    // turn off the :focus selector for browsers that support :focus-visible
    background: var(--chip-background);
  }

  &:active {
    background: var(--chip-active-background) !important;
  }

  &:focus-within {
    background: var(--chip-focus-background);

    /**
       * Even though :has is not yet supported in all the browsers (as of Oct 2022),
       * this styling is a nicety that we can live without since the solution would
       * over complicate the JS code to compute the same effect. We can live without
       * it in Firefox, especially because Mozilla plans to support it eventually.
       */
    &:has([icon-side] > button:focus) {
      background: var(--chip-background);
    }
  }

  &[aria-disabled='true'],
  &[aria-disabled='true']:hover {
    cursor: not-allowed;
    background: var(--chip-disabled-background) !important;
    color: var(--chip-disabled-color) !important;
  }
`

export const lowChipCss = css`
  --chip-color: currentcolor;
  --chip-background: transparent;
  --chip-focus-background: ${colors.transparent.color03};
  --chip-active-background: ${colors.transparent.color05};
  --chip-disabled-background: transparent;
  --chip-disabled-color: ${colors.transparent.gray40};
`

export const highChipCss = css`
  --chip-color: ${colors.color90};
  --chip-background: ${colors.transparent.color03};
  --chip-focus-background: ${colors.transparent.color05};
  --chip-active-background: ${colors.transparent.color10};
  --chip-disabled-background: ${colors.transparent.gray02};
  --chip-disabled-color: ${colors.transparent.gray40};

  &[data-selected] {
    --chip-color: ${colors.color02};
    --chip-background: ${colors.color60};
    --chip-focus-background: ${colors.color30};
    --chip-active-background: ${colors.color70};

    &[data-night] {
      --chip-color: ${colors.white100};
      --chip-background: ${colors.color20};
      --chip-focus-background: ${colors.color40};
      --chip-active-background: ${colors.color10};
    }
  }

  &[data-white] {
    --chip-color: ${colors.white100};
    --chip-background: ${colors.transparent.color05};
    --chip-focus-background: ${colors.transparent.color10};
    --chip-active-background: ${colors.transparent.color20};

    &:not([data-gray-chip]) {
      --chip-color: ${colors.color70};
      --chip-background: ${colors.color05};
      --chip-focus-background: ${colors.color10};
      --chip-active-background: ${colors.color20};
    }

    &[data-selected] {
      --chip-color: ${colors.color02};
      --chip-background: ${colors.color70};
      --chip-focus-background: ${colors.color50};
      --chip-active-background: ${colors.color80};
      &[data-gray-chip] {
        --chip-color: rgba(0, 0, 0, 0.8);
      }
    }
  }
`

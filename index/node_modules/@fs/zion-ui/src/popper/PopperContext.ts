import type { Dispatch, RefObject, SetStateAction } from 'react'
import { createContext } from 'react'
import { preventOverflow, flip, offset } from '@popperjs/core/lib/modifiers'
import type { Instance, Placement, Obj, Modifier } from '@popperjs/core'

import { maxHeight, applyMaxHeight, betterFlip } from './modifiers'

type ModifierCreatorArgs = {
  placement: Placement
  fallbackPlacements: Placement[]
  distance: number
  setMaxHeight?: (h: number) => void
}

export type Rect = {
  x: number
  y: number
  width: number
  height: number
}

type ModifierCreator = (args: ModifierCreatorArgs) => Modifier<string, Obj>[]

export const defaultModifierCreator: ModifierCreator = ({ fallbackPlacements, distance }) => {
  return [
    { ...flip, options: { fallbackPlacements } },
    preventOverflow,
    { ...offset, options: { offset: [0, distance] } },
  ]
}

// used in ZoomPan to behave best in a zoomy-panny environment
export const zoomPanModifierCreator: ModifierCreator = ({ placement, fallbackPlacements, distance }) => {
  return [
    { ...betterFlip, options: { fallbackPlacements: [placement, ...fallbackPlacements] } },
    // savePlacement,
    { ...offset, options: { offset: [0, distance] } },
  ]
}

// used in MenuOverlays to keep them always visible on the screen by shrinking and making them scrollable
export const menuOverlayModifierCreator: ModifierCreator = ({ fallbackPlacements, setMaxHeight, distance }) => {
  return [
    { ...betterFlip, options: { fallbackPlacements, padding: { bottom: 20, top: 20 }, altAxis: false } },
    { ...maxHeight, options: { padding: { bottom: 20, top: 20 } } },
    { ...applyMaxHeight, options: { setMaxHeight } },
    preventOverflow,
    { ...offset, options: { offset: [0, distance] } },
  ]
}

// used in ZoomPan to contain references to active poppers
const dummySetActivePoppers = (): void => undefined

export const PopperContext = createContext<Dispatch<SetStateAction<RefObject<Instance>[]>>>(dummySetActivePoppers)

// used to select which modifier to use for poppers
export const PopperModifiersContext = createContext(defaultModifierCreator)

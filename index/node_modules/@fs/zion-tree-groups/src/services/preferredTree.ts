import axiosUntyped, { useZionAxios as useZionAxiosUntyped } from '@fs/zion-axios'
import { type useZionAxios as useZionAxiosTyped } from '@fs/zion-tree-types/zion-axios'
import type axiosTyped from '@fs/zion-tree-types/zion-axios'

const axios = axiosUntyped as typeof axiosTyped
const useZionAxios = useZionAxiosUntyped as typeof useZionAxiosTyped

export function setPreferredTree(treeId: string): ReturnType<typeof axiosTyped.post<''>> {
  return axios.post<''>('/service/tree/tree-data/user/CURRENT/tree/preferences', { treeId })
}

type useZionAxiosResponse = ReturnType<typeof useZionAxios<{ treeId: string }>>

export type PreferredTreeData = {
  preferredTreeId: NonNullable<useZionAxiosResponse[0]['data']>['treeId'] | undefined
  error: useZionAxiosResponse[0]['error']
  loading: useZionAxiosResponse[0]['loading']
  refetch: useZionAxiosResponse[1]
}
export function usePreferredTree(): PreferredTreeData {
  const [{ data, error, loading }, fetch] = useZionAxios<{ treeId: string }>(
    '/service/tree/tree-data/user/CURRENT/tree/preferences'
  )

  return { preferredTreeId: data?.treeId, error, loading, refetch: fetch }
}

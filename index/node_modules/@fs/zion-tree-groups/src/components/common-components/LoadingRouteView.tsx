import { NoticeLoading } from '@fs/zion-icon'
import { Row, useOverlayUpdate } from '@fs/zion-ui'
import React, { useEffect } from 'react'
import { useHistory } from '@fs/zion-router'
import { useEvent } from '@fs/zion-frontend-friends'
import type { History } from 'history'
import resetStack from '../../helpers/resetStack'

type Props = {
  loading: boolean
  initialEntries: string[]
  initialIndex: number
}

/** A loading view for TransitioningDialogOverlay until we know which route to go to after loading via initialEntries and initialIndex. */
export default function LoadingRouteView({ loading, initialEntries, initialIndex }: Props): JSX.Element {
  const history: History = useHistory()

  const updateTitle = useOverlayUpdate('title')

  useEffect(() => updateTitle(''), [updateTitle])

  // Resets history stack as if there was no loading view and initialEntries and initialIndex was passed to MemoryRouter
  const updateHistoryStack = useEvent(() => {
    resetStack(history, initialEntries, initialIndex)
  })

  useEffect(() => {
    if (!loading) updateHistoryStack()
  }, [loading, updateHistoryStack])

  return (
    <Row alignX="center">
      <NoticeLoading size="lg" />
    </Row>
  )
}

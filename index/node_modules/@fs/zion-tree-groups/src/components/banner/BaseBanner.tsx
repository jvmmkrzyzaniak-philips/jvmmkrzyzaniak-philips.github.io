import React, { useEffect, useState, useRef } from 'react'
import type { ReactNode } from 'react'
import { Alert, Separator } from '@fs/zion-ui'
import Cache from '@fs/zion-cache'
import { type CacheConfig } from '@fs/zion-tree-types/zion-cache'
import type CacheType from '@fs/zion-tree-types/zion-cache'

const storeName = 'banner'
const sessionCache = new Cache({ storeName, type: 'session' } satisfies CacheConfig) as CacheType<boolean>

type SeparatorSize = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' | 'xxs' | 'nano'

type Props = {
  marginTop?: SeparatorSize
  marginBottom?: SeparatorSize
  dismissedKey: string
  children: ReactNode
}

export default function BaseBanner({ marginTop, marginBottom, dismissedKey, children }: Props): JSX.Element | null {
  const isCurrent = useRef(true)
  const [bannerDismissed, setBannerDismissed] = useState(true)

  useEffect(() => {
    isCurrent.current = true
    sessionCache.getItem(dismissedKey).then((item) => {
      isCurrent.current && setBannerDismissed(Boolean(item))
    })
    return () => {
      isCurrent.current = false
    }
  }, [dismissedKey])

  const onDismiss = (): void => {
    sessionCache.setItem(dismissedKey, true)
    setBannerDismissed(true)
  }

  if (bannerDismissed) return null

  return (
    <>
      <Separator size={marginTop || 'hide'} />
      <Alert onDismiss={onDismiss} outlined dismissable>
        {children}
      </Alert>
      <Separator size={marginBottom || 'hide'} />
    </>
  )
}

import { type BasePerson } from '@fs/zion-tree-types'
import { type GroupsValue } from '../types/groups'

type Props = {
  focusPerson?: BasePerson
  /** Called after focusPerson is defined and switched trees if needed. */
  onHasLoaded?: () => void
} & Pick<Partial<GroupsValue>, 'currentTreeId' | 'selectTree' | 'isResearcherGroup'>

export default function switchTree({
  focusPerson,
  selectTree,
  currentTreeId,
  isResearcherGroup,
  onHasLoaded,
}: Props): void {
  if (!focusPerson) return

  if (selectTree && focusPerson.treeId && focusPerson.treeId !== currentTreeId) {
    selectTree(focusPerson.treeId)
      .finally(() => onHasLoaded?.())
      .catch(console.error)
    return
  }

  if (
    selectTree &&
    ((focusPerson.treeType === 'PRIVATE' && currentTreeId !== 'PRIVATE' && currentTreeId !== '') ||
      (focusPerson.treeType === 'PUBLIC' && isResearcherGroup))
  ) {
    selectTree('PRIVATE')
      .finally(() => onHasLoaded?.())
      .catch(console.error)
    return
  }

  onHasLoaded?.()
}

import React, { type ComponentProps } from 'react'
import { IconButton } from '@fs/zion-ui'
import { DocumentRecordPerson, NoticeImportant, NoticeSuggestion, NoticeLoading } from '@fs/zion-icon'

const iconMap = {
  'data-problems': NoticeImportant,
  'record-hints': DocumentRecordPerson,
  'research-suggestions': NoticeSuggestion,
}

const colorMap = {
  'data-problems': 'danger' as 'red', // TODO IconButton does handle danger as a color but its types are wrong.
  'record-hints': 'blue',
  'research-suggestions': 'purple',
} as const

const emphasisMap = {
  'data-problems': 'high',
  'record-hints': 'lightHigh',
  'research-suggestions': 'lightHigh',
} as const

type IconButtonProps = ComponentProps<typeof IconButton>

type Props = {
  type: 'data-problems' | 'record-hints' | 'research-suggestions'
  loading?: boolean
  'data-testid'?: string
  emphasis?: IconButtonProps['emphasis']
  size?: IconButtonProps['size']
} & Record<string, unknown>

export default function IndicatorButton({
  type,
  'data-testid': dataTestId,
  loading,
  emphasis,
  size,
  ...props
}: Props): JSX.Element {
  return (
    // @ts-expect-error -- it expects a title prop. todo for future.
    <IconButton
      Icon={loading ? NoticeLoading : iconMap[type]}
      disabled={loading}
      color={colorMap[type]}
      emphasis={emphasis ?? emphasisMap[type]}
      data-testid={dataTestId}
      size={size ?? 'sm'}
      {...props}
    />
  )
}

import React, { lazy, Suspense } from 'react'
import { css } from '@linaria/core'
import { useTranslation } from 'react-i18next'
import { Link } from '@fs/zion-router'
import { baseUrl } from '@fs/zion-config'
import { i18n } from '@fs/zion-locale'
import { useUser } from '@fs/zion-user'
import { useFeatureFlag } from '@fs/zion-flags'
import logo from '../../img/familysearch-tree.svg'

const LogoFamilysearch = lazy(() => import('./LogoFamilySearch'))

const logoCss = css`
  display: flex;
  margin-bottom: 2px;
  align-items: center;
`

export function Logo({ breakMode, signedIn }) {
  const { t } = useTranslation()
  const alt = t('global.familysearch', 'FamilySearch')
  return (
    <div className={logoCss}>
      <Suspense fallback="">
        {breakMode === 'mobile' && signedIn === true ? (
          <LogoFamilysearch size="md" role="img" aria-label={alt} />
        ) : (
          <img src={logo} width="132" height="33.8" alt={alt} aria-label={alt} data-test-id="hdr_FS_logo" />
        )}
      </Suspense>
    </div>
  )
}

export default function FSLogo({ useBaseUrl = false, ...props }) {
  const { signedIn } = useUser()
  const { isOn: loggedInGoToPortal } = useFeatureFlag('home_header_logoLoggedInGoToPortal')
  const homeBaseUrl = useBaseUrl && baseUrl ? baseUrl : ''
  const signedOutURL = `${homeBaseUrl}/${i18n.language}/`
  const signedInURL = loggedInGoToPortal ? `${homeBaseUrl}/${i18n.language}/home/portal/` : signedOutURL
  return (
    <Link to={signedIn ? signedInURL : signedOutURL} linkName="hdr19_home_logo" external className={logoCss}>
      <Logo {...props} />
    </Link>
  )
}

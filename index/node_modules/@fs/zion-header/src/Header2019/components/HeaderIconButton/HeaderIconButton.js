import React from 'react'
import { css } from '@linaria/core'
import PropTypes from 'prop-types'
import { boolAttr } from '@fs/zion-frontend-friends'
import { colors, useContainerWidth, useTheme } from '@fs/zion-ui'
import { BaseIconButton } from '@fs/zion-ui/quarks-authorized-use-only'

const iconButtonSmallCss = css`
  --button-text-color: ${colors.gray100} !important; // BaseIconButton was overriding this color
  --button-hover-background: #e1ebc5;
  --button-active-background: #e1ebc5;

  position: relative;

  &[data-theme='night'] {
    &:hover,
    &:active {
      --button-text-color: ${colors.gray00} !important;
    }
  }

  &[dotted]:before {
    content: '';
    position: absolute;
    left: 24px;
    top: 6px;
    background-color: ${colors.danger50};
    opacity: 1;
    width: 10px;
    height: 10px;
    border-radius: 100%;
    border: 2px solid white;
    top: 2px;
    left: 20px;
  }
`
const iconButtonLargeCss = css`
  --button-text-color: ${colors.gray100} !important; // BaseIconButton was overriding this color
  --button-hover-background: #e1ebc5;
  --button-active-background: #e1ebc5;

  position: relative;

  &[data-theme='night'] {
    &:hover,
    &:active {
      --button-text-color: ${colors.gray00} !important;
    }
  }

  &[dotted]:before {
    content: '';
    position: absolute;
    left: 24px;
    top: 6px;
    background-color: ${colors.danger50};
    opacity: 1;
    width: 10px;
    height: 10px;
    border-radius: 100%;
    border: 2px solid white;
  }
`
export default function HeaderIconButton({ dotted = false, ...props }) {
  const atWidth = useContainerWidth()
  const isMobile = atWidth({ default: true, xl: false })
  const theme = useTheme()

  return (
    <BaseIconButton
      data-theme={theme}
      {...props}
      title={props.title}
      className={isMobile ? iconButtonSmallCss : iconButtonLargeCss}
      dotted={boolAttr(dotted)}
      data-testid={dotted ? 'newItemsDot' : null}
      emphasis="low"
    />
  )
}

HeaderIconButton.propTypes = {
  /** The icon to use for the button. Must be something imported from `@fs/zion-icon` */
  Icon: PropTypes.elementType.isRequired,

  /** Whether the icon button is disabled */
  disabled: PropTypes.bool,

  /** Click handler for when the button is clicked */
  onClick: PropTypes.func,

  /** The title for the button */
  title: PropTypes.string.isRequired,

  /** Content to go inside the HeaderIconButton */
  children: PropTypes.node,

  /** Enables the red dot, used to signify that there are unread notifications */
  dotted: PropTypes.bool,
}

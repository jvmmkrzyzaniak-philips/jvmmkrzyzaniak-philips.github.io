import { useEffect, useState } from 'react'
import { useCache } from '@fs/zion-cache'
import { usePermission } from '@fs/zion-permissions'
import axios from '@fs/zion-axios'

const key = 'FSC_calling_permission'
const initialValue = { set: false }
const cache = { storeName: 'header', type: 'session' }

export default function useFamilySearchCenterAdmin() {
  const [isMember] = usePermission('FtMemberUiPermission')
  const [permissions, setPermissions] = useState(isMember)
  const [cachedAdminPermissions, setCachedAdminPermissions] = useCache({ cache, key, initialValue })

  useEffect(() => {
    let canceled = false
    const getEditingPermissions = async () => {
      try {
        const response = await axios.get('/service/help/local-info/centers/editor')
        !canceled && setPermissions(response.data)
        setCachedAdminPermissions({ set: true, hasPermission: response.data })
      } catch {
        !canceled && setPermissions(false)
      }
    }
    if (isMember && !cachedAdminPermissions?.set) {
      getEditingPermissions()
    } else if (cachedAdminPermissions?.hasPermission) {
      !canceled && setPermissions(cachedAdminPermissions?.hasPermission)
    }
    return () => {
      canceled = true
    }
    /* eslint-disable-next-line react-hooks/exhaustive-deps */
  }, [isMember])

  return permissions
}

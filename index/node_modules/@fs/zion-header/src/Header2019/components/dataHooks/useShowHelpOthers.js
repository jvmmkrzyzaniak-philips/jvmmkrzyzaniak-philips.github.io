import { useEffect, useState } from 'react'
import getPermission from '@fs/zion-permissions'
import { useCache } from '@fs/zion-cache'
import { useUser } from '@fs/zion-user'

const key = 'BSCMS_view_permission'
const initialValue = { set: false }
const cache = { storeName: 'header', type: 'session' }

export default function useShowHelpOthers(adminRoles) {
  const { signedIn } = useUser()
  const [someBSCMSPermissions, setSomeBSCMSPermissions] = useState()
  const [cachedBSCMSPermissions, setCachedBSCMSPermissions] = useCache({ cache, key, initialValue })

  useEffect(() => {
    async function checkBSCMSPermissions() {
      try {
        const permissions = await getPermission(
          ['BSCMS_view_support', 'BSCMS_view_supervisor', 'BSCMS_view_data_security', 'BSCMS_view_data_quality'],
          'BSCMS_View'
        )
        const hasAtLeastOnePermission =
          permissions.authorized || permissions.roleResults.some(({ activatorResults }) => activatorResults[0].success)
        setSomeBSCMSPermissions(hasAtLeastOnePermission)
        setCachedBSCMSPermissions({ hasPermission: hasAtLeastOnePermission })
      } catch {
        setSomeBSCMSPermissions(false)
      }
    }
    if (signedIn && cachedBSCMSPermissions?.set === false) {
      checkBSCMSPermissions()
    } else if (cachedBSCMSPermissions) {
      setSomeBSCMSPermissions(cachedBSCMSPermissions.hasPermission)
    }
  }, [signedIn, cachedBSCMSPermissions, setCachedBSCMSPermissions])

  return someBSCMSPermissions || adminRoles?.length > 0
}

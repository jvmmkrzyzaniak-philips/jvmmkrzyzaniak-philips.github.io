import React, { useEffect } from 'react'

import { Button, Paragraph, Row, H5, useOverlayUpdate } from '@fs/zion-ui'
import { useEvent } from '@fs/zion-frontend-friends'
import { Link, useHistory } from '@fs/zion-router'
import { Trans, useTranslation } from 'react-i18next'
import useCustomEscHandler from '../hooks/useCustomEsc'
import { useAddFindFlowContext } from '../hooks/AddFindFlowContext'

export default function DisplaySearchError({ titleKey, messageKey, link, updateInfoSheetFooter }) {
  const [t] = useTranslation()
  const { inInfoSheet } = useAddFindFlowContext()
  const history = useHistory()
  useCustomEscHandler()
  const updateDialogFooter = useOverlayUpdate('footer')
  const updateFooter = inInfoSheet ? updateInfoSheetFooter : updateDialogFooter

  const handleClick = useEvent(() => {
    // we want to clear the errored state when the user clicks back
    updateFooter()
    history.goBack()
  })

  useEffect(() => {
    updateFooter(
      // Not using DialogOverlayActions, because sometimes this will be a sidesheet
      // This implementation is identical, we just don't want to get any patch updates that do not work with a sidesheet
      <Row alignX="end">
        <Button emphasis="high" data-testid="cancel-button" onClick={handleClick}>
          {t('common-ui:back.action')}
        </Button>
      </Row>
    )
  }, [handleClick, t, updateFooter])

  return (
    <>
      {titleKey && (
        <H5>
          <Trans i18nKey={titleKey} />
        </H5>
      )}
      <Paragraph>
        <Trans
          i18nKey={messageKey}
          components={{
            L: <Link external to={link} target="_blank" />,
          }}
        />
      </Paragraph>
    </>
  )
}

import React from 'react'
import PropTypes from 'prop-types'

const StandardDate = {
  sortKey: PropTypes.string,
  standardizedText: PropTypes.string,
  originalText: PropTypes.string,
  earliestAstro: PropTypes.number,
  yearRange: PropTypes.number,
  formalText: PropTypes.string,
}

export const StandardDateProps = (props = {}) => {
  return <div {...props} />
}
StandardDateProps.propTypes = StandardDate

const GeoLocation = {
  latitude: PropTypes.number,
  longitude: PropTypes.number,
}
export const GeoLocationProps = (props = {}) => {
  return <div {...props} />
}
GeoLocationProps.propTypes = GeoLocation

const StandardPlace = {
  id: PropTypes.number,
  standardizedText: PropTypes.string,
  PlaceValue: PropTypes.string,
  yearRange: PropTypes.string,
  location: PropTypes.shape(GeoLocation),
}

export const StandardPlaceProps = (props = {}) => {
  return <div {...props} />
}
StandardPlaceProps.propTypes = StandardPlace

const PersonValueType = {
  surname: PropTypes.string,
  givenName: PropTypes.string,
  sex: PropTypes.string,
}

const PersonNameType = {
  title: PropTypes.string,
  firstName: PropTypes.string,
  lastName: PropTypes.string,
  suffix: PropTypes.string,
}

export const PersonNameTypeProps = (props = {}) => {
  return <div {...props} />
}
PersonNameTypeProps.propTypes = PersonNameType

const DateValueType = {
  originalText: PropTypes.string,
  standard: PropTypes.shape(StandardDate),
}

export const DateValueTypeProps = (props = {}) => {
  return <div {...props} />
}
DateValueTypeProps.propTypes = DateValueType

const PlaceValueType = {
  originalText: PropTypes.string,
  standard: PropTypes.shape(StandardPlace),
}

export const PlaceValueTypeProps = (props = {}) => {
  return <div {...props} />
}
PlaceValueTypeProps.propTypes = PlaceValueType

const NameTemplateType = {
  bg: PropTypes.shape(PersonNameType),
  'bg-Latn': PropTypes.shape(PersonNameType),
  cs: PropTypes.shape(PersonNameType),
  da: PropTypes.shape(PersonNameType),
  de: PropTypes.shape(PersonNameType),
  el: PropTypes.shape(PersonNameType),
  'el-Latn': PropTypes.shape(PersonNameType),
  en: PropTypes.shape(PersonNameType),
  es: PropTypes.shape(PersonNameType),
  fi: PropTypes.shape(PersonNameType),
  fr: PropTypes.shape(PersonNameType),
  id: PropTypes.shape(PersonNameType),
  hu: PropTypes.shape(PersonNameType),
  it: PropTypes.shape(PersonNameType),
  ja: PropTypes.shape(PersonNameType),
  'ja-Hrkt': PropTypes.shape(PersonNameType),
  'ja-Latn': PropTypes.shape(PersonNameType),
  km: PropTypes.shape(PersonNameType),
  'km-Latn': PropTypes.shape(PersonNameType),
  'ko-Hang': PropTypes.shape(PersonNameType),
  'ko-Hani': PropTypes.shape(PersonNameType),
  'ko-Latn': PropTypes.shape(PersonNameType),
  mg: PropTypes.shape(PersonNameType),
  'mn-Cyrl': PropTypes.shape(PersonNameType),
  'mn-Latn': PropTypes.shape(PersonNameType),
  nl: PropTypes.shape(PersonNameType),
  no: PropTypes.shape(PersonNameType),
  pl: PropTypes.shape(PersonNameType),
  pt: PropTypes.shape(PersonNameType),
  ro: PropTypes.shape(PersonNameType),
  ru: PropTypes.shape(PersonNameType),
  'ru-Latn': PropTypes.shape(PersonNameType),
  sk: PropTypes.shape(PersonNameType),
  sm: PropTypes.shape(PersonNameType),
  sq: PropTypes.shape(PersonNameType),
  sv: PropTypes.shape(PersonNameType),
  sw: PropTypes.shape(PersonNameType),
  th: PropTypes.shape(PersonNameType),
  'th-Latn': PropTypes.shape(PersonNameType),
  to: PropTypes.shape(PersonNameType),
  uk: PropTypes.shape(PersonNameType),
  'uk-Latn': PropTypes.shape(PersonNameType),
  und: PropTypes.shape(PersonNameType),
  vi: PropTypes.shape(PersonNameType),
  zh: PropTypes.shape(PersonNameType),
  'zh-Hani': PropTypes.shape(PersonNameType),
  'zh-Latn': PropTypes.shape(PersonNameType),
}

export const NameTemplateTypeProps = (props = {}) => {
  return <div {...props} />
}
NameTemplateTypeProps.propTypes = NameTemplateType

export const InitialValuesType = {
  /** The sex of the person */
  sex: PropTypes.string,

  /** The living status of the person, "living" or "deceased" */
  status: PropTypes.string,

  /** The birth date of the person (of type DateType) */
  birthDate: PropTypes.shape(DateValueType),

  /** The death date of the person */
  deathDate: PropTypes.shape(DateValueType),

  /** The birth place of the person */
  birthPlace: PropTypes.shape(PlaceValueType),

  /** The death place of the person */
  deathPlace: PropTypes.shape(PlaceValueType),

  /** The name template key of the person */
  template: PropTypes.string,

  /** The name template values for the person */
  nameTemplate: PropTypes.shape(NameTemplateType),

  /** The first parent of the person */
  parent1: PropTypes.shape(PersonValueType),

  /** The second parent of the person */
  parent2: PropTypes.shape(PersonValueType),

  /** The spouse of the person */
  spouse: PropTypes.shape(PersonValueType),
}

export default function InitialValues(props = {}) {
  return <div {...props} />
}
InitialValues.propTypes = InitialValuesType

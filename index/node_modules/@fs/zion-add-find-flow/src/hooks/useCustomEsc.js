import { useEffect, useCallback } from 'react'
import { useHistory } from '@fs/zion-router'
import { useEscHandler } from '@fs/zion-ui'
import { useAddFindFlowContext } from './AddFindFlowContext'

export default function useCustomEscHandler() {
  const history = useHistory()
  const { index, goBack } = history
  const { abortController, loading, clearErrors, resetAbortController, overlay } = useAddFindFlowContext()
  const { isOpen, close } = overlay

  // reset abortController when we push the back button
  useEffect(() => {
    return history?.listen?.(() => {
      if (history.action === 'POP') {
        if (!abortController.signal.aborted && isOpen && loading) {
          abortController.abort()
          resetAbortController()
        }
        clearErrors()
      }
    })
  }, [abortController, clearErrors, history, isOpen, loading, resetAbortController])

  const escHandler = useCallback(() => {
    if (index > 0) {
      return goBack()
    }
    return close()
  }, [close, index, goBack])

  useEscHandler({ enabled: true, handler: escHandler })
}

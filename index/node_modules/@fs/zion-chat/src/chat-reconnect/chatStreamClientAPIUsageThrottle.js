import throttledQueue from 'throttled-queue'

function getStreamAPIEndPointKey(url) {
  if (url) {
    const urlParams = new URL(url).pathname.split('/')
    return `/${urlParams[1]}`
  }
  return undefined
}

export function updateThrottleByURLMap(apiEndPointKey, throttleByURLMap) {
  const MAX_REQUESTS_PER_THROTTLE_INTERVAL = 15
  const THROTTLE_INTERVAL = 15000

  // apply a different throttle for each stream API
  if (!throttleByURLMap[apiEndPointKey]) {
    throttleByURLMap[apiEndPointKey] = throttledQueue(MAX_REQUESTS_PER_THROTTLE_INTERVAL, THROTTLE_INTERVAL)
  }
  return throttleByURLMap
}

export default function configureStreamClientAPIUsageThrottle(chatClient) {
  const wrap = async (config) => config
  const throttleByURLMap = {}

  // Cleanup previous interrupter handlers
  chatClient.axiosInstance.interceptors.request.handlers = []
  chatClient.axiosInstance.interceptors.request.use((config) => {
    const { url } = config
    const apiEndPointKey = getStreamAPIEndPointKey(url)

    updateThrottleByURLMap(apiEndPointKey, throttleByURLMap)
    return throttleByURLMap[apiEndPointKey](wrap.bind(this, config))
  })
}

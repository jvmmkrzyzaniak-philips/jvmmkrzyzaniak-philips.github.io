import { useEffect, useRef } from 'react'
import useChatFlags from '../useChatFlags'

const useVisibilityChange = (callback) => {
  const isListenerSet = useRef(false)
  const { messagingChatDisconnectInactiveWebsocketsIsOn } = useChatFlags()
  useEffect(() => {
    if (isListenerSet.current === true || !messagingChatDisconnectInactiveWebsocketsIsOn) {
      return () => {}
    }

    const handleVisibilityChange = () => {
      if (document.visibilityState === 'visible') {
        callback('visible')
      } else {
        callback('hidden')
      }
    }

    document.addEventListener('visibilitychange', handleVisibilityChange)
    isListenerSet.current = true

    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange)
      isListenerSet.current = false
    }
  }, [callback, messagingChatDisconnectInactiveWebsocketsIsOn])
}

export default useVisibilityChange

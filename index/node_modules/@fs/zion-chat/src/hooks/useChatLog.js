import { useCallback } from 'react'
import { trackEvent } from '@fs/zion-analytics'
import chatLog, { LOG_LEVEL } from '../global/chatLog'
import { useChatState } from '../providers/ChatStateProvider'
import useChatFlags from './useChatFlags'

export default function useChatLog({ component } = {}) {
  const { user, client } = useChatState() || {}
  const {
    messagingChatLogLogIsOn: log,
    messagingChatLogInfoIsOn: info,
    messagingChatLogWarnIsOn: warn,
    messagingChatLogErrorIsOn: error,
    messagingChatLogMyUserIsOn: logMyUser,
  } = useChatFlags()
  const cisId = user?.cisId
  const id = client?.userID

  const logChat = useCallback(
    ({ msg, level }, extraParams) => {
      const logLevels = { log, info, warn, error, logMyUser }
      chatLog({ msg, component, logLevels, user: { id, cisId }, level }, extraParams)
    },
    [component, log, info, warn, error, logMyUser, id, cisId]
  )

  const track = useCallback(
    ({ event_name = 'click_action', link_name }, extraParams) => {
      trackEvent({ event_name, link_name, ...extraParams })
      logChat({ msg: link_name, level: LOG_LEVEL.LOG }, extraParams)
    },
    [logChat]
  )

  return { log: logChat, track }
}

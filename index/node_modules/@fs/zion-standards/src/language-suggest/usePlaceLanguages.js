import { useState } from 'react'
import { getLanguages, getLanguage } from './languageHelper'

function getSuggestions(inputText, advanced) {
  if (!inputText) {
    return []
  }
  const suggestions = getLanguages()
    .map((suggestion) => {
      return {
        ...suggestion,
        primaryText: advanced ? `${suggestion.primaryText} (${suggestion.code})` : suggestion.primaryText,
      }
    })
    .filter((suggestion) => {
      return suggestion.primaryText.toLowerCase().includes(inputText.toLowerCase())
    })

  const inputTextMatch = suggestions.find((s) => {
    return s.primaryText.toLowerCase() === inputText.toLowerCase()
  })

  if (!inputTextMatch && advanced) {
    suggestions.unshift({ primaryText: inputText, key: inputText, code: inputText })
  }
  return suggestions
}

export default function usePlaceLanguages(initialLocale, advanced) {
  const initialSelectedItem = getLanguage(initialLocale, advanced)
  const [inputText, setInputText] = useState(initialSelectedItem?.primaryText || '')
  const suggestions = getSuggestions(inputText, advanced)
  return { inputText, setInputText, suggestions, initialSelectedItem }
}

import React, { forwardRef } from 'react'
import { useTranslation } from 'react-i18next'
import { Autosuggest } from '@fs/zion-ui-autosuggest'
import PropTypes from 'prop-types'
import { getAdvancedLanguageSuggestions, getLanguageSuggestions } from './useLanguageSuggest'

const LanguageSuggestNEXT = forwardRef(function LanguageSuggest({ config, label, advanced, ...props }, ref) {
  const [t] = useTranslation()
  const getSuggestions = advanced ? getAdvancedLanguageSuggestions : getLanguageSuggestions
  return (
    <Autosuggest
      ref={ref}
      label={label || t('language-suggest.language.label', 'Language')}
      getSuggestions={getSuggestions}
      config={config}
      placeholder={t('language-suggest.select-language.place-holder', 'e.g. English')}
      highlightMatchingText
      {...props}
    />
  )
})

export const meta = {
  name: 'LanguageSuggestNEXT',
  isZionFormComponent: true,
}

LanguageSuggestNEXT.meta = meta

LanguageSuggestNEXT.propTypes = {
  /** Displays the language code associated with the language name in the list of suggestions.
   *  Generates an additional suggestion from the user's input text when it doesn't match an existing language.
   *  If a user generated suggestion contains a valid language code, it can be accepted in place of an item
   *  selected from the provided list of language suggestions.
   * */
  advanced: PropTypes.bool,
}

export default LanguageSuggestNEXT

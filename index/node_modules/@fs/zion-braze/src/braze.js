import { initialize, isInitialized, automaticallyShowInAppMessages, changeUser, openSession } from '@braze/web-sdk'
import { targetEnv } from '@fs/zion-config'
import zionDebug from '@fs/zion-debug'
import { i18n } from '@fs/zion-locale'
import { getUser } from '@fs/zion-user'

const debug = zionDebug('zion:braze')

const BRAZE_BASE = 'sdk.iad-07.braze.com'
const BRAZE_API_KEY =
  targetEnv === 'prod' ? 'b13c8f6a-7657-43fb-84ac-34900c38bb29' : 'd14a9ff7-96e5-46f8-9f16-972aeb48ff42'

// In the future, we may need to map Cebuano to something (Tagalog perhaps?) as well.
// If/As this mapping function grows larger, consider using a switch statement instead.
// eslint-disable-next-line no-underscore-dangle -- This function is prefixed with an underscore for internal use.
export function _mapLanguage(language) {
  if (language === 'zh-hant') {
    return 'zh'
  }
  // Make zh-hans undefined to play nice with `Accept-Language`/HTML lang attribute
  if (language === 'zh-hans') {
    return undefined
  }
  return language
}

export async function init(anonymousMode = false) {
  debug('called init()', anonymousMode, isInitialized())
  if (isInitialized()) return true

  // we initialize braze if in anonymous mode, or if not in anonymous mode then when signed in
  let shouldInitBraze = anonymousMode
  let user = {}
  if (!anonymousMode) {
    user = await getUser()
    debug('braze init getUser done:', user)
    shouldInitBraze = !!user.cisId
  }
  if (shouldInitBraze && !isInitialized()) {
    debug('initializing braze SDK', isInitialized())
    const success = initialize(BRAZE_API_KEY, {
      baseUrl: BRAZE_BASE,
      localization: _mapLanguage(i18n.language),
      enableLogging: debug.enabled,
      // this is just for testing, we may or may not need this or allow depending on pending discussions
      allowUserSuppliedJavascript: targetEnv !== 'prod',
    })
    debug('initialize returned:', success)

    // optionally show all in-app messages without custom handling
    automaticallyShowInAppMessages()

    // if you use Content Cards
    // braze.subscribeToContentCardsUpdates(function (_cards) {
    //   // cards have been updated
    // })

    // optionally set the current user's external ID before starting a new session
    // you can also call `changeUser` later in the session after the user logs in
    if (user.cisId) {
      changeUser(user.cisId.split('.')[2])
      // userIdentifier cis.user.MMMM-NNNN -> MMMM-NNNN
    }

    debug('calling openSession')
    // `openSession` should be called last - after `changeUser` and `automaticallyShowInAppMessages`
    openSession()
  }
  return true
}

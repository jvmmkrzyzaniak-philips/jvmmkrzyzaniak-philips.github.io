import React from 'react'
import { useTranslation } from 'react-i18next'
import { css } from '@linaria/core'
import { boolAttr } from '@fs/zion-frontend-friends'
import { NoticeImportant } from '@fs/zion-icon'
import { NotFound } from '@fs/zion-router'
import { Paragraph, Button, colors, LayoutBand, Row, Separator, useContainerWidth, H3, H4 } from '@fs/zion-ui'
import recordDetailsError from './RecordRemovedPermissionDenied.svg'

const centerCss = css`
  text-align: center;
`
const imageCss = css`
  object-fit: cover;
  margin-right: auto;
  margin-left: auto;
  margin-top: 90px;
  margin-bottom: 35px;
  box-sizing: border-box;
  @media screen and (max-width: 462px) {
    width: 100%;
    padding-left: 0px;
    padding-right: 0px;
  }
`

const retiredBannerCss = css`
  background-color: ${colors.gray00};
  border-top: 1px solid ${colors.gray10};
  padding: 12px 24px;

  &[ismobile] {
    padding: 12px 16px;
  }
`

function FallbackImage() {
  const [t] = useTranslation()
  return (
    <picture>
      <img src={recordDetailsError} alt={t('error.imageAlt', 'Something Went Wrong')} className={imageCss} />
    </picture>
  )
}

export default function FallbackPage({ error, isInInfoSheet = false }) {
  let type
  const atWidth = useContainerWidth()
  const isSmallerScreen = atWidth({ default: true, md: false }) // hide image
  const [t] = useTranslation()
  if (error?.status === 403) type = 'unauthorized'
  else if (error?.status === 404) return <NotFound />
  else if (error?.status === 410) type = 'removed'
  else type = 'recordDetailsError'
  const header = {
    unauthorized: t('record-details.unauthorized.header', `We're unable to show this record.`),
    removed: t('record-details.recordRemoved.header', 'This Record has been removed.'),
    recordDetailsError: t('error.header', 'Something Went Wrong'),
  }
  const body1 = {
    unauthorized: t(
      'record-details.unauthorized.body',
      'This record can only be displayed on certain accounts. FamilySearch must honor the agreements we have with our partners, record owners, and internal policies.'
    ),
    removed: t(
      'record-details.recordRemoved.body',
      'Unfortunately, the record that you requested is no longer available. If you arrived here from a bookmark, please delete your bookmark.'
    ),
    recordDetailsError: t(
      'error.body',
      'Unfortunately, something went wrong and we are unable to display the record. Try refreshing the page, or come back later.'
    ),
  }

  return (
    <LayoutBand className={centerCss} data-testid="recordError">
      {!isSmallerScreen && <FallbackImage type={type} />}
      {!isInInfoSheet ? <H3>{header[type]}</H3> : <H4>{header[type]}</H4>}
      <Separator size="nano" />
      <Paragraph centered size="sm">
        {body1[type]}
      </Paragraph>
      <Separator size="sm" />
      {(type === 'unauthorized' || type === 'removed') && !isInInfoSheet && (
        <Row alignX="center" wrap>
          <Button emphasis="medium" onClick={() => window.history.back()}>
            {t('record-details.error.goBack', 'Go Back')}
          </Button>

          <Button emphasis="medium" to="https://www.familysearch.org">
            {t('record-details.error.returnToHomePage', 'FamilySearch Home Page')}
          </Button>
        </Row>
      )}
      {type === 'recordDetailsError' && (
        <Row alignX="center">
          <Button
            emphasis="medium"
            onClick={() => {
              window.location.reload()
            }}
          >
            {t('record-details.not-found.option-reload', 'Reload the Page')}
          </Button>
        </Row>
      )}
    </LayoutBand>
  )
}

export function RetiredRecordBanner({ currentRecord }) {
  const { t } = useTranslation()
  const atWidth = useContainerWidth()
  const isMobile = atWidth({ default: true, lg: false })
  const bannerText = t(
    'record-details.retiredBanner.text',
    'This record was a duplicate and has been retired. We recommend using the most current copy.'
  )
  const onConfirmText = t('record-details.retiredBanner.confirm', 'View Current Record')
  return (
    <Row
      // Designating this as a group makes the screen reader tell the user
      // that this interface is all related. When they use the "skip to main content"
      // button, it does not tell them they are in the "Important Notice" region.
      // This is a good way to let them know.
      role="group"
      aria-label={t('record-details.alertBanner.notice', 'Important Notice')}
      className={retiredBannerCss}
      ismobile={boolAttr(isMobile)}
      guttersY="none"
      wrap
    >
      <Row growX>
        <NoticeImportant size="sm" background={colors.danger60} color="white" noShrinkX />
        <div alignY="middle" growX>
          {bannerText}
        </div>
      </Row>

      <Row alignX="end" alignY="middle" growX>
        <Button to={currentRecord}>{onConfirmText}</Button>
      </Row>
    </Row>
  )
}

import React, { useState, useEffect } from 'react'
import { Separator, Row, colors, DescriptionTooltip, Paragraph, BillboardText } from '@fs/zion-ui'
import { NoticeImportant } from '@fs/zion-icon'
import { css } from '@linaria/core'
import { useTranslation } from 'react-i18next'
import { useZionAxios } from '@fs/zion-axios'
import { getArkId } from '@fs/zion-ark'

const hintIconCss = css`
  transform: rotate(180deg);
`
const iconOverideCss = css`
  & span[icon-size='xs'] {
    --icon-circle-size: 16px;
  }
`
/**
 * Renders a Warning message and icon when the record being viewed has a confidence level of 3 or less.
 * If a confidence is supplied, then we will use that avoid making any calls. If we are supplied a hintingRef, we will make
 * a call to see if the hinted person has a weak hint with the current record.
 * @param {String} hintTreeRef TreeRef for the person hinted at, if we come from a hint
 * @param {String} ark An ARK reference for a record.
 * @param {Boolean} centered - Centers the warning within it's container when true
 * @param {Number} confidence - The confidence rating of the hint being provided. Used to show warning if confidence is 3 or less
 * @param {Boolean} dense - Removes whitespace directly above the warning
 * @returns {WeakHintWarning} - React component
 */
export default function WeakHintWarning({ hintTreeRef, ark, centered = false, confidence, dense = false }) {
  const { t } = useTranslation()
  const [fetchedHintConfidence, setFetchedHintConfidence] = useState(4)

  const [{ data: matches }] = useZionAxios(
    `/platform/tree/persons/${hintTreeRef}/matches?collection=records`,
    // Don't make the call if we have a supplied confidence or we have no tree hint.
    { manual: Boolean(confidence) || !hintTreeRef }
  )

  useEffect(() => {
    // Look through the hinting person's possible record hints. If we find one that has the same ark
    // as the one we are currently comparing, send the confidence of that hint into the sidesheet.
    // (Used to display weaker hint warning)
    if (hintTreeRef && ark) {
      const recordHint = matches?.entries?.find((entry) => {
        return getArkId(entry.id) === getArkId(ark)
      })
      setFetchedHintConfidence(recordHint?.confidence)
    }
  }, [hintTreeRef, matches, ark])

  const isWeakHint = (confidence || fetchedHintConfidence) <= 3

  return (
    isWeakHint && (
      <>
        {!dense && <Separator size="nano" />}
        <Row guttersX="nano" alignY="middle" alignX={centered ? 'center' : 'start'}>
          <DescriptionTooltip
            label={t(
              'search.record.weakHintToolTip',
              'This record is a weaker match and may not be about your ancestor. To remove these types of hints, turn off expanded hints in your account settings'
            )}
            target={
              <Row guttersX="nano" guttersY="none">
                <Row guttersX="nano" guttersY="none" alignY="middle" className={iconOverideCss}>
                  <NoticeImportant
                    className={hintIconCss}
                    background={colors.yellow70}
                    color={colors.white100}
                    size="xs"
                    direction="up"
                  />
                </Row>
                <BillboardText primaryColor={colors.yellow70}>
                  <Paragraph size="xs">{t('search.record.weakHint', 'Weaker Hint')}</Paragraph>
                </BillboardText>
              </Row>
            }
          />
        </Row>
      </>
    )
  )
}

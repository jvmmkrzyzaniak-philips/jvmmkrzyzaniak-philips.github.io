import React, { lazy, Suspense } from 'react'
import { Button, useOverlay, Paragraph, Row, Separator } from '@fs/zion-ui'
import { trackEvent } from '@fs/zion-analytics'
import { useTranslation } from 'react-i18next'
import { useSendIndexingMessage } from './RecordProvider'

const ThankIndexerDialog = lazy(() => import('./ThankIndexerDialog'))

export default function ThankIndexer() {
  const { contributorDetails } = useSendIndexingMessage()
  const { t } = useTranslation()
  const overlay = useOverlay()
  return contributorDetails.length ? (
    <>
      <Row alignX="center" guttersY="none">
        <Paragraph size="sm">
          {t('record-details.indexer', 'This information is available because a volunteer indexed it for you.')}
        </Paragraph>
      </Row>
      <Separator size="xxs" />
      <Row alignX="center" guttersY="none">
        <Button
          emphasis="medium"
          onClick={(evt) => {
            overlay.handleClick(evt)
            trackEvent({
              event_name: 'click_action',
              link_name: 'Indexer Thank You button clicked',
            })
          }}
        >
          {t('record-details.indexer.thank-you-button', 'Say Thank You')}
        </Button>
      </Row>
      {(overlay.isOpen || overlay.transitioning) && (
        <Suspense fallback="">
          <ThankIndexerDialog overlay={overlay} />
        </Suspense>
      )}
    </>
  ) : null
}

import React from 'react'
import { useTranslation } from 'react-i18next'
import { css } from '@linaria/core'
import { useContainerWidth, H2 } from '@fs/zion-ui'
import { boolAttr } from '@fs/zion-frontend-friends'
import VisuallyHidden from '@reach/visually-hidden'
import { usePersonaFields } from './RecordProvider'
import FieldDetails from './FieldDetails'

const tableCss = css`
  margin: 0 auto;
  padding-top: 0.3em;
  padding-bottom: 1em;
  &[is-mobile] {
    padding-inline-start: 8px;
    padding-inline-end: 8px;
  }
  &[is-infosheet] {
    margin: 0 8px;
  }
`

export default function PersonaFields({ showPrincipalFields = false, id }) {
  const { t } = useTranslation()
  const { isPrincipal, fields, principalName, principalFields, isInInfoSheet, name } = usePersonaFields(id)
  const atWidth = useContainerWidth()
  const isMobile = atWidth({ default: true, xxs: true, lg: false })

  function displayField(field) {
    const key = `persona-field-${field.fieldType || field.labelId || field.key}-${field.value}`
    return <FieldDetails field={field} key={key} isInInfoSheet={isInInfoSheet} />
  }

  const tableCaption = t('record-details.personaFields.caption', '{name} person details', { name })

  return (
    <table className={tableCss} is-mobile={boolAttr(isMobile)} is-infosheet={boolAttr(isInInfoSheet)}>
      <VisuallyHidden as="caption">{tableCaption}</VisuallyHidden>
      <tbody>
        {fields?.map(displayField)}
        {!isPrincipal && showPrincipalFields && (
          <>
            <tr>
              <td colSpan={2}>
                <H2 size="H5" supplementary>
                  {t('search.record.mentionedIn', 'Mentioned in the record of {principalName}', {
                    principalName,
                  })}
                </H2>
              </td>
            </tr>
            {principalFields?.map(displayField)}
          </>
        )}
      </tbody>
    </table>
  )
}

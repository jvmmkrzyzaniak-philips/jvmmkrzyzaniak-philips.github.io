import React, { useState, useCallback, createContext, useMemo } from 'react'

const defaultTutorialState = {
  tutorialAvailable: false,
  tutorialId: '',
  openTutorial: () => {},
  tutorialTitle: '',
  requestedArticle: '',
  updateState: () => {},
}
export const HelpTutorialContext = createContext(defaultTutorialState)

export default function HelpTutorialProvider({ children }) {
  const [state, setState] = useState(defaultTutorialState)
  const updateState = useCallback((newState) => {
    // Making sure to keep old state, so consumers of the context don't necessarily need
    // to know about every piece in this state, just the ones relevant to them
    setState((oldState) => ({ ...oldState, ...newState }))
  }, [])

  const tutorialContext = useMemo(() => ({ ...state, updateState }), [state, updateState])

  return <HelpTutorialContext.Provider value={tutorialContext}>{children}</HelpTutorialContext.Provider>
}

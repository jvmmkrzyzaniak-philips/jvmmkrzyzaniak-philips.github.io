// We are wrapping Intl.DateTimeFormat so that if we find that certain languages don’t work, or that certain format combinations don’t work, that we can correct it for everyone.
// There are conversations being had about standardized date formats, so that that might be coming in the future.

import React from 'react'
import memoizeIntlConstructor from 'intl-format-cache'
import PropTypes from 'prop-types'
import { i18n } from './index'

const getDateTimeFormat = memoizeIntlConstructor(Intl.DateTimeFormat)

export default function intlFormat(
  date,
  formatOptions = { day: 'numeric', month: 'long', year: 'numeric' },
  locale = i18n.language
) {
  // The Great Britain format "31 July 1980" matches our preferred format better than the English default of "July 31, 1980"
  if (locale === 'en') {
    locale = 'en-GB'
  }
  return getDateTimeFormat(locale, formatOptions).format(date)
}

// This is just a dummy component so that we can use propTypes to make things easier to document
export const IntlFormatOptions = (props) => <div {...props} />

IntlFormatOptions.propTypes = {
  /** Date to display */
  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string, PropTypes.number]).isRequired,

  /** The format the date should be in */
  formatOptions: PropTypes.shape({
    weekday: PropTypes.oneOf(['narrow', 'short', 'long']),
    era: PropTypes.oneOf(['narrow', 'short', 'long']),
    year: PropTypes.oneOf(['numeric', '2-digit']),
    month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),
    day: PropTypes.oneOf(['numeric', '2-digit']),
    hour: PropTypes.oneOf(['numeric', '2-digit']),
    minute: PropTypes.oneOf(['numeric', '2-digit']),
    second: PropTypes.oneOf(['numeric', '2-digit']),
    timeZoneName: PropTypes.oneOf(['short', 'long']),
    // Time zone to express it in
    timeZone: PropTypes.string,
    // Force 12-hour or 24-hour
    hour12: PropTypes.bool,
    // Rarely-used options
    hourCycle: PropTypes.oneOf(['h11', 'h12', 'h23', 'h24']),
    formatMatcher: PropTypes.oneOf(['basic', 'best fit']),
  }),

  /** locale override. DEFAULTS TO i18n.language */
  locale: PropTypes.string,
}

IntlFormatOptions.defaultProps = {
  formatOptions: { day: 'numeric', month: 'long', year: 'numeric' },
  locale: i18n.language,
}

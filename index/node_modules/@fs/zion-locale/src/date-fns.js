import {
  format as formatFn,
  formatDistance as formatDistanceFn,
  formatDistanceStrict as formatDistanceStrictFn,
  formatRelative as formatRelativeFn,
  parse as parseFn,
} from 'date-fns'
import debug from '@fs/zion-debug'
import getDateFnsLocale from './dateFnsLocales'

const log = debug('trace:zion:locale:date-fns')

// cannot depend directly on i18n.language due to circular dependency, so using an update method to keep current locale in sync
let locale = 'en'
function updateLocale(newLocale) {
  locale = newLocale
}

function lookupOptionsLocale(options = { locale }) {
  log('lookupOptionsLocale init', options)
  if (options && typeof options.locale === 'string') {
    options.locale = getDateFnsLocale(options.locale)
  }
  log('lookupOptionsLocale final', options)
  return options
}

function format(date, formatStr = 'd MMMM yyyy', options) {
  const localeOption = { locale: getDateFnsLocale(locale) }
  log.enabled &&
    log('format', formatStr, locale, localeOption.locale.code, date, {
      ...localeOption,
      ...lookupOptionsLocale(options),
    })
  return formatFn(date, formatStr, { ...localeOption, ...lookupOptionsLocale(options) })
}

function formatDistance(date, baseDate = Date.now(), options) {
  return formatDistanceFn(date, baseDate, { locale: getDateFnsLocale(locale), ...lookupOptionsLocale(options) })
}

function formatDistanceStrict(date, baseDate = Date.now(), options) {
  return formatDistanceStrictFn(date, baseDate, { locale: getDateFnsLocale(locale), ...lookupOptionsLocale(options) })
}

function formatRelative(date, baseDate = Date.now(), options) {
  return formatRelativeFn(date, baseDate, { locale: getDateFnsLocale(locale), ...lookupOptionsLocale(options) })
}

function parse(dateStr, formatStr = 'd MMMM yyyy', referenceDate = new Date(), options) {
  return parseFn(dateStr, formatStr, referenceDate, {
    locale: getDateFnsLocale(locale),
    ...lookupOptionsLocale(options),
  })
}

export * from 'date-fns'
export { format, formatDistance, formatDistanceStrict, formatRelative, updateLocale, parse }

import axios from '@fs/zion-axios'
import { appName, targetEnv } from '@fs/zion-config'
import zionDebug from '@fs/zion-debug'

const splunkLogger = {
  /**
   * Log a message to remote with a severity level.
   * @param {string|object} data         - Information to log to remote.
   * @param {number}        [severity=1] - Severity level (log = 1, info = 2, warn = 3, error = 4)
   * @param {app}           app          - app name to log under, so you can find it in splunk. Default: zion-config appName
   */

  log(data, severity = 1, app = appName) {
    const debug = zionDebug('zion:splunk-logger')
    let dataType = 'string'
    if (typeof data === 'string') {
      if (!data) {
        throw new TypeError('splunk-logger string data should not be empty')
      }
    } else if (typeof data === 'object') {
      dataType = 'object'
      if (Object.keys(data).length < 1) {
        throw new TypeError('splunk-logger object data should not be empty')
      }
    } else {
      throw new TypeError('splunk-logger data should only be a string or object')
    }

    const logObj = {
      s: severity,
      a: app || 'unknown',
    }
    if (dataType === 'string') {
      logObj.ms = data
    } else if (dataType === 'object') {
      logObj.mo = data
    }

    let url = ''
    switch (targetEnv) {
      case 'prod':
        url = 'https://www.familysearch.org/frontier/beacon/splunk-logger'
        break
      case 'beta':
        url = 'https://beta.familysearch.org/frontier/beacon/splunk-logger'
        break
      case 'int':
        url = 'https://integration.familysearch.org/frontier/beacon/splunk-logger'
        break
      case 'local':
        // eslint-disable-next-line no-console -- Since this is a logger, we actually need to console.log here.
        console.log(logObj)
        break
      default:
        url = 'https://www.familysearch.org/frontier/beacon/splunk-logger'
    }

    // const url = 'http://localhost:5001/splunk/'

    if (process.env.NODE_ENV === 'development') {
      debug(logObj)
    } else {
      axios.post(url, logObj, { headers: { 'Content-type': 'application/json' } }).catch((err) => {
        console.error('Error sending to Splunk Logger:', err)
      })
    }
  },

  /**
   * @param {string|object} data - Information to log to remote.
   */
  info(data) {
    this.log(data, 2)
  },

  /**
   * Log a message with severity level 3.
   * @param {string|object} data - Information to log to remote.
   */
  warn(data) {
    this.log(data, 3)
  },

  /**
   * Log a message with severity level 4.
   * @param {string|object} data - Information to log to remote.
   */
  error(data) {
    this.log(data, 4)
  },
}

export default splunkLogger

import React from 'react'
import PropTypes from 'prop-types'
import * as PersonDataService from '@fs/zion-person-service'
import { Ellipsis } from '@fs/zion-ui'

/**
 * Sub-component for Person, handles lifespan and pid logic, styling, and rendering.
 * @param {object} props - The props passed into the element.
 * @param {string} [props.lifespanSize="short"] - Which lifespan value to display - tree-data returns both a lifespan which is short and a fullLifeSpan which is longer. Valid values are "short" or "long".
 * @param {object} [props.personObj={}] - A tree-data person to display. This person must be normalized by running through personDataService's normalizePersonObj function
 * @returns {HTMLElement} - The React element itself.
 */
export default function Lifespan({ lifespanSize, personObj }) {
  const person = personObj.normalized ? personObj : PersonDataService.normalizePersonObj(personObj)
  const lifespan = lifespanSize === 'short' ? person.lifespan : (person.fullLifespan ?? person.lifespan)
  return <Ellipsis data-testid="lifespan">{lifespan}</Ellipsis>
}

Lifespan.propTypes = {
  lifespanSize: PropTypes.oneOf(['short', 'long']),
  personObj: PropTypes.shape({
    fullLifespan: PropTypes.string,
    gender: PropTypes.string,
    id: PropTypes.string,
    lifespan: PropTypes.string,
    name: PropTypes.string,
    nameConclusion: PropTypes.shape({
      details: PropTypes.shape({
        nameForms: PropTypes.array,
      }),
    }),
    portraitUrl: PropTypes.string,
  }),
}

Lifespan.defaultProps = {
  lifespanSize: 'short',
  personObj: {},
}

import React from 'react'
import PropTypes from 'prop-types'
import { Link } from '@fs/zion-router'
import { useEvent } from '@fs/zion-frontend-friends'
import { useLinkContext } from '../../Person/Person'

/**
 * A link or span wrapper for the children passed in.
 * @param {object} props - The props passed into the element.
 * @param {object} [props.children] - The content of the link or span.
 * @param {string} [props.linkOrSpan='span'] - Whether to wrap the children in a link or a span. Valid values are 'link' and 'span'.
 * @param {string} [props.href] - The href that the link will go to.
 * @param {boolean} [props.linksOpenNewTab] - Whether to open in new tab or not
 * @returns {HTMLElement} - The React element itself.
 */
export default function LinkOrSpan(props = {}) {
  const { children, linkOrSpan, href, linksOpenNewTab, ...otherProps } = props
  const targetProps = linksOpenNewTab ? { target: '_blank' } : {}
  const disableLinkIfOverlayOn = useLinkContext()
  const onClick = useEvent((evt) => {
    if (disableLinkIfOverlayOn && !evt.metaKey && !evt.ctrlKey) {
      evt.preventDefault()
    }
    otherProps?.onClick?.(evt)
  })

  if (linkOrSpan === 'link') {
    return (
      <Link
        to={href}
        external
        noLinkStyles
        wayfinding
        {...targetProps}
        {...otherProps}
        noScrollTop
        data-testid="nameLink"
        onClick={onClick}
      >
        {children}
      </Link>
    )
  }
  return (
    <span {...otherProps} data-testid="nameSpan">
      {children}
    </span>
  )
}

LinkOrSpan.propTypes = {
  children: PropTypes.node,
  linkOrSpan: PropTypes.oneOf(['link', 'span']),
  href: PropTypes.string,
}

LinkOrSpan.defaultProps = {
  linkOrSpan: 'span',
}

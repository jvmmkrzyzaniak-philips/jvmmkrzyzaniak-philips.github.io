import React, { forwardRef } from 'react'
import DOMPurify from 'dompurify'
import PropTypes from 'prop-types'

const SafeInnerHtml = ({ dirtyInput, options, as: TagName = 'div', ...props }, ref) => {
  return (
    <TagName
      ref={ref}
      {...props}
      dangerouslySetInnerHTML={{
        __html: DOMPurify.sanitize(dirtyInput, options),
      }}
    />
  )
}

export default forwardRef(SafeInnerHtml)

export const removeHtml = (dirtyInput) =>
  dirtyInput &&
  DOMPurify.sanitize(dirtyInput, {
    ALLOWED_TAGS: [
      /* None! */
    ],
  })

SafeInnerHtml.propTypes = {
  /** The Dirty HTML to sanitize */
  dirtyInput: PropTypes.string.isRequired,

  /** Enclosing tag name. */
  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),
}

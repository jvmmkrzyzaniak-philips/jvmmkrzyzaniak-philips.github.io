export default function shallowEqual<T>(a: T | undefined, b: T | undefined): boolean {
  if (a === b) return true
  if (typeof a === 'object' && typeof b === 'object') {
    const keys: string[] = [...Object.keys(a), ...Object.keys(b)]
    return keys.every((key: string) => (a as Record<string, unknown>)[key] === (b as Record<string, unknown>)[key])
  }
  return false
}

import React from 'react'
import PropTypes from 'prop-types'
import { BrowserRouter, useHistory } from 'react-router-dom'
import { RoutesProvider } from './routes-context'

const RouterInner = (props) => {
  const history = useHistory()

  return <RoutesProvider {...props} history={history} />
}

const ZionRouter = ({ children, langCodeInUrlOptOut = false, handledExternalRoutes, basename, ...props }) => {
  return (
    // using basename as the key, because ReactRouter v5 does not respond to `basename` changes
    <BrowserRouter {...props} basename={basename} key={basename}>
      <RouterInner
        handledExternalRoutes={handledExternalRoutes}
        basename={basename}
        langCodeInUrlOptOut={langCodeInUrlOptOut}
      >
        {children}
      </RouterInner>
    </BrowserRouter>
  )
}
ZionRouter.propTypes = {
  /** An array of either react router location objects or paths for this Router to handle. See https://github.com/remix-run/history/blob/main/docs/api-reference.md#location */
  handledExternalRoutes: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),
}

export default ZionRouter

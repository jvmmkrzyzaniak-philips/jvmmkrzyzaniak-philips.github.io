import React, { lazy, Suspense } from 'react'
import { useUser } from '@fs/zion-user'
import Route from './Route'
import LoadingSpinner from './LoadingSpinner'

const PersonalDataCheck = lazy(() => import('./PersonalDataCheck'))

function AuthRouteWrapper({ LoadingComponent, signedIn, userLoading, children }) {
  const LoadingEl = LoadingComponent || LoadingSpinner
  if (signedIn) {
    return children
  }
  if (userLoading) {
    return <LoadingEl />
  }
  typeof window !== 'undefined' &&
    window.location.replace(`/auth/familysearch/login?returnUrl=${encodeURIComponent(window.location)}`)

  // TODO: check with UX to figure out experience for redirecting message
  return <LoadingEl />
}

function AuthRoute({ component: Component, children, ...rest }) {
  const userInfo = useUser()

  return (
    <Route
      {...rest}
      render={(props) => (
        <AuthRouteWrapper {...userInfo} {...rest}>
          {children || <Component {...props} />}
        </AuthRouteWrapper>
      )}
    />
  )
}

export default function AuthRouteFacade({ requirePersonalData, LoadingComponent, ...props }) {
  const LoadingEl = LoadingComponent || LoadingSpinner
  if (requirePersonalData)
    return (
      <Suspense fallback={<LoadingEl />}>
        <PersonalDataCheck {...{ ...props, LoadingComponent }} SuccessComponent={AuthRoute} />
      </Suspense>
    )

  return <AuthRoute {...props} LoadingComponent={LoadingComponent} />
}

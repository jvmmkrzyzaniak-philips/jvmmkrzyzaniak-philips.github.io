import React, { memo } from 'react'
import { css } from '@linaria/core'
import { useTranslation } from 'react-i18next'
import { ActionChip, colors, useOverlay } from '@fs/zion-ui'
import { GroupDetailsOverlay, useGroupsContext } from '@fs/zion-tree-groups'
import { usePedigreeViewOptions } from '../../pedigree-view-options'

const groupDetailsCss = css`
  // This overrides Zoom-Pan left Control chip
  & [data-testid='group-details-chip'] {
    color: ${colors.gray00};
    background: ${colors.gray60};
    &:visited {
      color: ${colors.gray00};
    }
    &:focus,
    &:hover {
      background: ${colors.gray40} !important;
      color: ${colors.gray00};
    }
  }
`

const GroupDetailChip = (): JSX.Element | null => {
  const { t } = useTranslation()
  const { groups, isReadOnlyTree } = useGroupsContext()
  const groupDetailsLabel = t('tw.pedigree.options.group-details')
  const overlay = useOverlay()

  const { prefsState } = usePedigreeViewOptions(true)

  const theme = prefsState?.prefs?.colorScheme === 'daybreak'

  const hasAtLeastOneTreeGroup = Boolean(groups?.find((group) => group.treeIds))

  if (!hasAtLeastOneTreeGroup || isReadOnlyTree) return null

  return (
    <div className={theme ? groupDetailsCss : undefined}>
      <ActionChip data-testid="group-details-chip" label={groupDetailsLabel} onClick={overlay.handleClick} />
      <GroupDetailsOverlay overlay={overlay} />
    </div>
  )
}

export default memo(GroupDetailChip)

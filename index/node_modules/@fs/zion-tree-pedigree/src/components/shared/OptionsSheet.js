import React, { memo, lazy, Suspense } from 'react'
import { InfoSheet, Divider } from '@fs/zion-ui'
import { useTranslation } from 'react-i18next'
import { useGroupsContext } from '@fs/zion-tree-groups'
import PropTypes from 'prop-types'

const GroupDetails = lazy(() => import('./GroupDetails'))

function OptionsSheet({ sheet, children, onClose }) {
  const { t } = useTranslation()

  const { isReadOnlyTree, currentTreeId } = useGroupsContext()

  return (
    <InfoSheet title={t('tw.pedigree.options.button')} size="md" {...sheet} onClose={onClose}>
      {!isReadOnlyTree && currentTreeId && (
        <Suspense fallback={null}>
          <GroupDetails />
          <Divider marginY="xs" />
        </Suspense>
      )}
      {children}
    </InfoSheet>
  )
}

export default memo(OptionsSheet)
OptionsSheet.propTypes = {
  /** from zion ui's useSheet */
  sheet: PropTypes.object.isRequired,
  children: PropTypes.node,
  /** onClose passed to InfoSheet */
  onClose: PropTypes.func,
}
